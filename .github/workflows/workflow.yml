name: CI

on:
  push:
    branches:
      - dev
  pull_request:
  release:
    types:
      - created


jobs:
  check_submodules:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: disk
      run: |
        df -h
        echo "kikou"
        du -h --max-depth=1
        pwd
    - name: get submodule
      run: |
        sed -i 's,git\@github.com:\([^/]*\)/\(.*\).git,https://github.com/\1/\2,' .gitmodules
        git submodule update --init --recursive
    - name: check submodules
      run: ./source/scripts/check_submodules.sh
    - name: disk
      run: |
        df -h
        echo "kikou"
        du -h --max-depth=1
        pwd


  build:
    runs-on: ubuntu-latest

    strategy:
        matrix:
            docker_image: [navitia/debian8_dev]

    container:
        image: ${{matrix.docker_image}}

    services:
      rabbitmq:
        image: rabbitmq:3-alpine
        ports:
          - 5672:5672

    steps:
    - uses: actions/checkout@v1
    - name: disk
      run: |
        df -h
        echo "kikou"
        du -h --max-depth=1
        pwd
    - name: get submodule
      run: |
        sed -i 's,git\@github.com:\([^/]*\)/\(.*\).git,https://github.com/\1/\2,' .gitmodules
        git submodule update --init --recursive
    - name: Install dependencies
      run: pip install -r source/jormungandr/requirements_dev.txt
    - name: configure
      run: cmake source
    - name: make
      run:  make -j $(nproc)
    - name: disk
      run: |
        df -h
        echo "kikou"
        du -h --max-depth=1
        pwd
    - name: tests
      run: |
        export JORMUNGANDR_BROKER_URL='amqp://guest:guest@rabbitmq:5672//'
        export KRAKEN_RABBITMQ_HOST='rabbitmq'
        ctest --output-on-failure
    - name: disk
      run: |
        df -h
        echo "kikou"
        du -h --max-depth=1
        pwd
    - name: install tyr dependencies
      run: |
        pip install -r source/tyr/requirements_dev.txt
        pip install -r source/sql/requirements.txt
    - name: disk
      run: |
        df -h
        echo "kikou"
        du -h --max-depth=1
        pwd
    - name: docker_test
      run: |
        export NAVITIA_CHAOS_DUMP_PATH=$(echo $GITHUB_WORKSPACE/source/tests/chaos/chaos_loading.sql.gz | sed -e 's#__w#home/runner/work#')
        echo $NAVITIA_CHAOS_DUMP_PATH
        make docker_test
    - name: disk
      run: |
        df -h
        echo "kikou"
        du -h --max-depth=1
        pwd
      env:
        NAVITIA_DOCKER_NETWORK: ${{ job.container.network }}
        TYR_CELERY_BROKER_URL: 'amqp://guest:guest@rabbitmq:5672//'


  precommit:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:18.04
      # we need python 3.6 and clang-format-6.0
      # we should be able to use no container once https://github.com/actions/virtual-environments/issues/46 is
      # resolved
    steps:
    - uses: actions/checkout@v1
    - name: install dependencies
      run: |
        apt update && apt install -y protobuf-compiler python python-pip python3  python3-pip clang-format-6.0 git 2to3
        pip install -r requirements_pre-commit.txt --upgrade
    - name: get submodule
      run: |
        sed -i 's,git\@github.com:\([^/]*\)/\(.*\).git,https://github.com/\1/\2,' .gitmodules
        git submodule update --init --recursive
    - name: Build Protobuf
      run: bash source/scripts/build_protobuf.sh
    - name: Pre-commit Run
      env:
        LC_ALL: C.UTF-8
        LANG: C.UTF-8
      run: |
        pre-commit install --install-hooks
        pre-commit run --all --show-diff-on-failure


  check_artemis:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: check artemis
      run: ./source/scripts/checkJenkinsJob.sh Artemis
    - name: check artemis IDFM
      run: ./source/scripts/checkJenkinsJob.sh Artemis_idfm

