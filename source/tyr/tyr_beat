#! /bin/sh
### BEGIN INIT INFO
# Provides:          tyr_beat
# Required-Start:    $all
# Required-Stop:     $all
# Default-Start:     2 3 4 5
# Default-Stop:
# Short-Description: start celery beat for tyr
# Description:       tyr beat run tyr job on worker at scheduled interval
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
NAME=tyr_beat
DAEMON="/usr/local/bin/celery"
DAEMON_OPTS="-A tyr.tasks --detach beat"
USER=www-data
GROUP=www-dat
PID=/tmp/tyr_beat.pid
#path to settings.py for tyr
TYR_CONFIG_FILE=""


test -x $DAEMON || exit 1

funcstatus(){
    ps p `cat $PID 2>/dev/null` 2>/dev/null | grep -q $DAEMON
    if [ $? -eq 0 ]
    then
        STATUS=0
    else
        STATUS=3
    fi
}

funcstart(){
    funcstatus
    if [ $STATUS -ne 0 ]
    then
        echo "Starting $NAME: "
        export TYR_CONFIG_FILE
        start-stop-daemon --start --chdir /tmp --exec $DAEMON -- --uid=$USER --gid=$GROUP --pidfile=$PID  $DAEMON_OPTS
        echo "done."
    else
        echo "$NAME already running"
    fi
}

funcstop(){
    echo "Stopping $NAME: "
    export TYR_CONFIG_FILE
    start-stop-daemon --stop --pidfile $PID
    if [ $? -eq 0 ]
    then
        rm $PID
        echo "done."
    else
        echo "failed"
        exit 1
    fi
}


case "$1" in
  start)
        funcstart
        ;;
  stop)
      funcstop
        ;;
  restart)
        funcstop
        funcstart
        ;;
  status)
        funcstatus
        if [ $STATUS -eq 0 ]
        then
            echo $NAME is running
        else
            echo $NAME is NOT running
        fi
        exit $STATUS
        ;;
  *)
        echo "Usage: /etc/init.d/$0 {start|stop|restart|status}" >&2
        exit 1
        ;;
esac

exit 0
