# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: kirin.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import gtfs_realtime_pb2 as gtfs__realtime__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='kirin.proto',
  package='kirin',
  syntax='proto2',
  serialized_options=None,
  serialized_pb=_b('\n\x0bkirin.proto\x12\x05kirin\x1a\x13gtfs-realtime.proto*w\n\x13StopTimeEventStatus\x12\r\n\tSCHEDULED\x10\x00\x12\x0b\n\x07\x44\x45LETED\x10\x01\x12\x0b\n\x07NO_DATA\x10\x02\x12\t\n\x05\x41\x44\x44\x45\x44\x10\x03\x12\x16\n\x12\x44\x45LETED_FOR_DETOUR\x10\x04\x12\x14\n\x10\x41\x44\x44\x45\x44_FOR_DETOUR\x10\x05:3\n\x0ctrip_message\x12\x1c.transit_realtime.TripUpdate\x18\xe8\x07 \x01(\t:M\n\x06\x65\x66\x66\x65\x63t\x12\x1c.transit_realtime.TripUpdate\x18\xe9\x07 \x01(\x0e\x32\x1e.transit_realtime.Alert.Effect:/\n\x08headsign\x12\x1c.transit_realtime.TripUpdate\x18\xea\x07 \x01(\t:6\n\x0b\x63ontributor\x12 .transit_realtime.TripDescriptor\x18\xe8\x07 \x01(\t:5\n\ncompany_id\x12 .transit_realtime.TripDescriptor\x18\xe9\x07 \x01(\t:F\n\x10stoptime_message\x12+.transit_realtime.TripUpdate.StopTimeUpdate\x18\xe8\x07 \x01(\t:\x93\x01\n\x1cstop_time_event_relationship\x12*.transit_realtime.TripUpdate.StopTimeEvent\x18\xe8\x07 \x01(\x0e\x32@.transit_realtime.TripUpdate.StopTimeUpdate.ScheduleRelationship:g\n\x16stop_time_event_status\x12*.transit_realtime.TripUpdate.StopTimeEvent\x18\xe9\x07 \x01(\x0e\x32\x1a.kirin.StopTimeEventStatus:>\n\x10physical_mode_id\x12#.transit_realtime.VehicleDescriptor\x18\xe8\x07 \x01(\t')
  ,
  dependencies=[gtfs__realtime__pb2.DESCRIPTOR,])

_STOPTIMEEVENTSTATUS = _descriptor.EnumDescriptor(
  name='StopTimeEventStatus',
  full_name='kirin.StopTimeEventStatus',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SCHEDULED', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DELETED', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NO_DATA', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADDED', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DELETED_FOR_DETOUR', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADDED_FOR_DETOUR', index=5, number=5,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=43,
  serialized_end=162,
)
_sym_db.RegisterEnumDescriptor(_STOPTIMEEVENTSTATUS)

StopTimeEventStatus = enum_type_wrapper.EnumTypeWrapper(_STOPTIMEEVENTSTATUS)
SCHEDULED = 0
DELETED = 1
NO_DATA = 2
ADDED = 3
DELETED_FOR_DETOUR = 4
ADDED_FOR_DETOUR = 5

TRIP_MESSAGE_FIELD_NUMBER = 1000
trip_message = _descriptor.FieldDescriptor(
  name='trip_message', full_name='kirin.trip_message', index=0,
  number=1000, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  serialized_options=None, file=DESCRIPTOR)
EFFECT_FIELD_NUMBER = 1001
effect = _descriptor.FieldDescriptor(
  name='effect', full_name='kirin.effect', index=1,
  number=1001, type=14, cpp_type=8, label=1,
  has_default_value=False, default_value=1,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  serialized_options=None, file=DESCRIPTOR)
HEADSIGN_FIELD_NUMBER = 1002
headsign = _descriptor.FieldDescriptor(
  name='headsign', full_name='kirin.headsign', index=2,
  number=1002, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  serialized_options=None, file=DESCRIPTOR)
CONTRIBUTOR_FIELD_NUMBER = 1000
contributor = _descriptor.FieldDescriptor(
  name='contributor', full_name='kirin.contributor', index=3,
  number=1000, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  serialized_options=None, file=DESCRIPTOR)
COMPANY_ID_FIELD_NUMBER = 1001
company_id = _descriptor.FieldDescriptor(
  name='company_id', full_name='kirin.company_id', index=4,
  number=1001, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  serialized_options=None, file=DESCRIPTOR)
STOPTIME_MESSAGE_FIELD_NUMBER = 1000
stoptime_message = _descriptor.FieldDescriptor(
  name='stoptime_message', full_name='kirin.stoptime_message', index=5,
  number=1000, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  serialized_options=None, file=DESCRIPTOR)
STOP_TIME_EVENT_RELATIONSHIP_FIELD_NUMBER = 1000
stop_time_event_relationship = _descriptor.FieldDescriptor(
  name='stop_time_event_relationship', full_name='kirin.stop_time_event_relationship', index=6,
  number=1000, type=14, cpp_type=8, label=1,
  has_default_value=False, default_value=0,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  serialized_options=None, file=DESCRIPTOR)
STOP_TIME_EVENT_STATUS_FIELD_NUMBER = 1001
stop_time_event_status = _descriptor.FieldDescriptor(
  name='stop_time_event_status', full_name='kirin.stop_time_event_status', index=7,
  number=1001, type=14, cpp_type=8, label=1,
  has_default_value=False, default_value=0,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  serialized_options=None, file=DESCRIPTOR)
PHYSICAL_MODE_ID_FIELD_NUMBER = 1000
physical_mode_id = _descriptor.FieldDescriptor(
  name='physical_mode_id', full_name='kirin.physical_mode_id', index=8,
  number=1000, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  serialized_options=None, file=DESCRIPTOR)

DESCRIPTOR.enum_types_by_name['StopTimeEventStatus'] = _STOPTIMEEVENTSTATUS
DESCRIPTOR.extensions_by_name['trip_message'] = trip_message
DESCRIPTOR.extensions_by_name['effect'] = effect
DESCRIPTOR.extensions_by_name['headsign'] = headsign
DESCRIPTOR.extensions_by_name['contributor'] = contributor
DESCRIPTOR.extensions_by_name['company_id'] = company_id
DESCRIPTOR.extensions_by_name['stoptime_message'] = stoptime_message
DESCRIPTOR.extensions_by_name['stop_time_event_relationship'] = stop_time_event_relationship
DESCRIPTOR.extensions_by_name['stop_time_event_status'] = stop_time_event_status
DESCRIPTOR.extensions_by_name['physical_mode_id'] = physical_mode_id
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

gtfs__realtime__pb2.TripUpdate.RegisterExtension(trip_message)
effect.enum_type = gtfs__realtime__pb2._ALERT_EFFECT
gtfs__realtime__pb2.TripUpdate.RegisterExtension(effect)
gtfs__realtime__pb2.TripUpdate.RegisterExtension(headsign)
gtfs__realtime__pb2.TripDescriptor.RegisterExtension(contributor)
gtfs__realtime__pb2.TripDescriptor.RegisterExtension(company_id)
gtfs__realtime__pb2.TripUpdate.StopTimeUpdate.RegisterExtension(stoptime_message)
stop_time_event_relationship.enum_type = gtfs__realtime__pb2._TRIPUPDATE_STOPTIMEUPDATE_SCHEDULERELATIONSHIP
gtfs__realtime__pb2.TripUpdate.StopTimeEvent.RegisterExtension(stop_time_event_relationship)
stop_time_event_status.enum_type = _STOPTIMEEVENTSTATUS
gtfs__realtime__pb2.TripUpdate.StopTimeEvent.RegisterExtension(stop_time_event_status)
gtfs__realtime__pb2.VehicleDescriptor.RegisterExtension(physical_mode_id)

# @@protoc_insertion_point(module_scope)
