// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chaos.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "chaos.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace chaos {

namespace {

const ::google::protobuf::Descriptor* Disruption_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Disruption_reflection_ = NULL;
const ::google::protobuf::Descriptor* Wording_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Wording_reflection_ = NULL;
const ::google::protobuf::Descriptor* Category_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Category_reflection_ = NULL;
const ::google::protobuf::Descriptor* Cause_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Cause_reflection_ = NULL;
const ::google::protobuf::Descriptor* Impact_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Impact_reflection_ = NULL;
const ::google::protobuf::Descriptor* LineSection_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LineSection_reflection_ = NULL;
const ::google::protobuf::Descriptor* PtObject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PtObject_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PtObject_Type_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Severity_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Severity_reflection_ = NULL;
const ::google::protobuf::Descriptor* Tag_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Tag_reflection_ = NULL;
const ::google::protobuf::Descriptor* Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Channel_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Channel_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Channel_Type_descriptor_ = NULL;
const ::google::protobuf::Descriptor* DisruptionProperty_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DisruptionProperty_reflection_ = NULL;
const ::google::protobuf::Descriptor* Meta_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Meta_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_chaos_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_chaos_2eproto() {
  protobuf_AddDesc_chaos_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "chaos.proto");
  GOOGLE_CHECK(file != NULL);
  Disruption_descriptor_ = file->message_type(0);
  static const int Disruption_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Disruption, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Disruption, reference_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Disruption, publication_period_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Disruption, created_at_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Disruption, updated_at_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Disruption, cause_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Disruption, impacts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Disruption, tags_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Disruption, note_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Disruption, localization_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Disruption, contributor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Disruption, properties_),
  };
  Disruption_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Disruption_descriptor_,
      Disruption::default_instance_,
      Disruption_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Disruption, _has_bits_[0]),
      -1,
      -1,
      sizeof(Disruption),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Disruption, _internal_metadata_),
      -1);
  Wording_descriptor_ = file->message_type(1);
  static const int Wording_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Wording, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Wording, value_),
  };
  Wording_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Wording_descriptor_,
      Wording::default_instance_,
      Wording_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Wording, _has_bits_[0]),
      -1,
      -1,
      sizeof(Wording),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Wording, _internal_metadata_),
      -1);
  Category_descriptor_ = file->message_type(2);
  static const int Category_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Category, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Category, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Category, created_at_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Category, updated_at_),
  };
  Category_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Category_descriptor_,
      Category::default_instance_,
      Category_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Category, _has_bits_[0]),
      -1,
      -1,
      sizeof(Category),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Category, _internal_metadata_),
      -1);
  Cause_descriptor_ = file->message_type(3);
  static const int Cause_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cause, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cause, wording_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cause, created_at_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cause, updated_at_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cause, wordings_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cause, category_),
  };
  Cause_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Cause_descriptor_,
      Cause::default_instance_,
      Cause_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cause, _has_bits_[0]),
      -1,
      -1,
      sizeof(Cause),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cause, _internal_metadata_),
      -1);
  Impact_descriptor_ = file->message_type(4);
  static const int Impact_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Impact, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Impact, created_at_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Impact, updated_at_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Impact, application_periods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Impact, severity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Impact, informed_entities_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Impact, messages_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Impact, send_notifications_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Impact, notification_date_),
  };
  Impact_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Impact_descriptor_,
      Impact::default_instance_,
      Impact_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Impact, _has_bits_[0]),
      -1,
      -1,
      sizeof(Impact),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Impact, _internal_metadata_),
      -1);
  LineSection_descriptor_ = file->message_type(5);
  static const int LineSection_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LineSection, line_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LineSection, start_point_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LineSection, end_point_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LineSection, sens_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LineSection, routes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LineSection, via_),
  };
  LineSection_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LineSection_descriptor_,
      LineSection::default_instance_,
      LineSection_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LineSection, _has_bits_[0]),
      -1,
      -1,
      sizeof(LineSection),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LineSection, _internal_metadata_),
      -1);
  PtObject_descriptor_ = file->message_type(6);
  static const int PtObject_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PtObject, created_at_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PtObject, updated_at_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PtObject, pt_object_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PtObject, uri_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PtObject, pt_line_section_),
  };
  PtObject_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PtObject_descriptor_,
      PtObject::default_instance_,
      PtObject_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PtObject, _has_bits_[0]),
      -1,
      -1,
      sizeof(PtObject),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PtObject, _internal_metadata_),
      -1);
  PtObject_Type_descriptor_ = PtObject_descriptor_->enum_type(0);
  Severity_descriptor_ = file->message_type(7);
  static const int Severity_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Severity, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Severity, wording_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Severity, created_at_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Severity, updated_at_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Severity, color_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Severity, priority_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Severity, effect_),
  };
  Severity_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Severity_descriptor_,
      Severity::default_instance_,
      Severity_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Severity, _has_bits_[0]),
      -1,
      -1,
      sizeof(Severity),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Severity, _internal_metadata_),
      -1);
  Tag_descriptor_ = file->message_type(8);
  static const int Tag_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tag, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tag, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tag, created_at_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tag, updated_at_),
  };
  Tag_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Tag_descriptor_,
      Tag::default_instance_,
      Tag_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tag, _has_bits_[0]),
      -1,
      -1,
      sizeof(Tag),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tag, _internal_metadata_),
      -1);
  Message_descriptor_ = file->message_type(9);
  static const int Message_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, text_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, channel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, created_at_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, updated_at_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, meta_),
  };
  Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Message_descriptor_,
      Message::default_instance_,
      Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _internal_metadata_),
      -1);
  Channel_descriptor_ = file->message_type(10);
  static const int Channel_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Channel, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Channel, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Channel, content_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Channel, max_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Channel, created_at_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Channel, updated_at_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Channel, types_),
  };
  Channel_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Channel_descriptor_,
      Channel::default_instance_,
      Channel_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Channel, _has_bits_[0]),
      -1,
      -1,
      sizeof(Channel),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Channel, _internal_metadata_),
      -1);
  Channel_Type_descriptor_ = Channel_descriptor_->enum_type(0);
  DisruptionProperty_descriptor_ = file->message_type(11);
  static const int DisruptionProperty_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DisruptionProperty, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DisruptionProperty, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DisruptionProperty, value_),
  };
  DisruptionProperty_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DisruptionProperty_descriptor_,
      DisruptionProperty::default_instance_,
      DisruptionProperty_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DisruptionProperty, _has_bits_[0]),
      -1,
      -1,
      sizeof(DisruptionProperty),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DisruptionProperty, _internal_metadata_),
      -1);
  Meta_descriptor_ = file->message_type(12);
  static const int Meta_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Meta, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Meta, value_),
  };
  Meta_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Meta_descriptor_,
      Meta::default_instance_,
      Meta_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Meta, _has_bits_[0]),
      -1,
      -1,
      sizeof(Meta),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Meta, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_chaos_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Disruption_descriptor_, &Disruption::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Wording_descriptor_, &Wording::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Category_descriptor_, &Category::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Cause_descriptor_, &Cause::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Impact_descriptor_, &Impact::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LineSection_descriptor_, &LineSection::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PtObject_descriptor_, &PtObject::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Severity_descriptor_, &Severity::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Tag_descriptor_, &Tag::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Message_descriptor_, &Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Channel_descriptor_, &Channel::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DisruptionProperty_descriptor_, &DisruptionProperty::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Meta_descriptor_, &Meta::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_chaos_2eproto() {
  delete Disruption::default_instance_;
  delete Disruption_reflection_;
  delete Wording::default_instance_;
  delete Wording_reflection_;
  delete Category::default_instance_;
  delete Category_reflection_;
  delete Cause::default_instance_;
  delete Cause_reflection_;
  delete Impact::default_instance_;
  delete Impact_reflection_;
  delete LineSection::default_instance_;
  delete LineSection_reflection_;
  delete PtObject::default_instance_;
  delete PtObject_reflection_;
  delete Severity::default_instance_;
  delete Severity_reflection_;
  delete Tag::default_instance_;
  delete Tag_reflection_;
  delete Message::default_instance_;
  delete Message_reflection_;
  delete Channel::default_instance_;
  delete Channel_reflection_;
  delete DisruptionProperty::default_instance_;
  delete DisruptionProperty_reflection_;
  delete Meta::default_instance_;
  delete Meta_reflection_;
}

void protobuf_AddDesc_chaos_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_chaos_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::transit_realtime::protobuf_AddDesc_gtfs_2drealtime_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013chaos.proto\022\005chaos\032\023gtfs-realtime.prot"
    "o\"\334\002\n\nDisruption\022\n\n\002id\030\001 \002(\t\022\021\n\treferenc"
    "e\030\003 \001(\t\0227\n\022publication_period\030\004 \001(\0132\033.tr"
    "ansit_realtime.TimeRange\022\022\n\ncreated_at\030\006"
    " \001(\004\022\022\n\nupdated_at\030\007 \001(\004\022\033\n\005cause\030\010 \001(\0132"
    "\014.chaos.Cause\022\036\n\007impacts\030\t \003(\0132\r.chaos.I"
    "mpact\022\030\n\004tags\030\013 \003(\0132\n.chaos.Tag\022\014\n\004note\030"
    "\014 \001(\t\022%\n\014localization\030\r \003(\0132\017.chaos.PtOb"
    "ject\022\023\n\013contributor\030\016 \001(\t\022-\n\nproperties\030"
    "\017 \003(\0132\031.chaos.DisruptionProperty\"%\n\007Word"
    "ing\022\013\n\003key\030\001 \002(\t\022\r\n\005value\030\002 \002(\t\"L\n\010Categ"
    "ory\022\n\n\002id\030\001 \002(\t\022\014\n\004name\030\002 \002(\t\022\022\n\ncreated"
    "_at\030\003 \001(\004\022\022\n\nupdated_at\030\004 \001(\004\"\221\001\n\005Cause\022"
    "\n\n\002id\030\001 \002(\t\022\017\n\007wording\030\002 \001(\t\022\022\n\ncreated_"
    "at\030\003 \001(\004\022\022\n\nupdated_at\030\004 \001(\004\022 \n\010wordings"
    "\030\005 \003(\0132\016.chaos.Wording\022!\n\010category\030\006 \001(\013"
    "2\017.chaos.Category\"\236\002\n\006Impact\022\n\n\002id\030\001 \002(\t"
    "\022\022\n\ncreated_at\030\002 \001(\004\022\022\n\nupdated_at\030\003 \001(\004"
    "\0228\n\023application_periods\030\004 \003(\0132\033.transit_"
    "realtime.TimeRange\022!\n\010severity\030\005 \001(\0132\017.c"
    "haos.Severity\022*\n\021informed_entities\030\006 \003(\013"
    "2\017.chaos.PtObject\022 \n\010messages\030\007 \003(\0132\016.ch"
    "aos.Message\022\032\n\022send_notifications\030\010 \001(\010\022"
    "\031\n\021notification_date\030\t \001(\004\"\303\001\n\013LineSecti"
    "on\022\035\n\004line\030\001 \002(\0132\017.chaos.PtObject\022$\n\013sta"
    "rt_point\030\002 \002(\0132\017.chaos.PtObject\022\"\n\tend_p"
    "oint\030\003 \002(\0132\017.chaos.PtObject\022\014\n\004sens\030\004 \001("
    "\005\022\037\n\006routes\030\005 \003(\0132\017.chaos.PtObject\022\034\n\003vi"
    "a\030\006 \003(\0132\017.chaos.PtObject\"\220\002\n\010PtObject\022\022\n"
    "\ncreated_at\030\001 \001(\004\022\022\n\nupdated_at\030\002 \001(\004\022,\n"
    "\016pt_object_type\030\003 \002(\0162\024.chaos.PtObject.T"
    "ype\022\013\n\003uri\030\004 \002(\t\022+\n\017pt_line_section\030\005 \001("
    "\0132\022.chaos.LineSection\"t\n\004Type\022\013\n\007network"
    "\020\001\022\r\n\tstop_area\020\002\022\010\n\004line\020\003\022\020\n\014line_sect"
    "ion\020\004\022\t\n\005route\020\005\022\017\n\013unkown_type\020\006\022\016\n\nsto"
    "p_point\020\007\022\010\n\004trip\020\010\"\240\001\n\010Severity\022\n\n\002id\030\001"
    " \002(\t\022\017\n\007wording\030\002 \001(\t\022\022\n\ncreated_at\030\003 \001("
    "\004\022\022\n\nupdated_at\030\004 \001(\004\022\r\n\005color\030\005 \001(\t\022\020\n\010"
    "priority\030\006 \001(\005\022.\n\006effect\030\007 \001(\0162\036.transit"
    "_realtime.Alert.Effect\"G\n\003Tag\022\n\n\002id\030\001 \002("
    "\t\022\014\n\004name\030\002 \002(\t\022\022\n\ncreated_at\030\003 \001(\004\022\022\n\nu"
    "pdated_at\030\004 \001(\004\"{\n\007Message\022\014\n\004text\030\001 \002(\t"
    "\022\037\n\007channel\030\002 \002(\0132\016.chaos.Channel\022\022\n\ncre"
    "ated_at\030\003 \001(\004\022\022\n\nupdated_at\030\004 \001(\004\022\031\n\004met"
    "a\030\005 \003(\0132\013.chaos.Meta\"\236\002\n\007Channel\022\n\n\002id\030\001"
    " \002(\t\022\014\n\004name\030\002 \001(\t\022\024\n\014content_type\030\003 \001(\t"
    "\022\020\n\010max_size\030\004 \001(\r\022\022\n\ncreated_at\030\005 \001(\004\022\022"
    "\n\nupdated_at\030\006 \001(\004\022\"\n\005types\030\007 \003(\0162\023.chao"
    "s.Channel.Type\"\204\001\n\004Type\022\007\n\003web\020\001\022\007\n\003sms\020"
    "\002\022\t\n\005email\020\003\022\n\n\006mobile\020\004\022\020\n\014notification"
    "\020\005\022\013\n\007twitter\020\006\022\014\n\010facebook\020\007\022\017\n\013unkown_"
    "type\020\010\022\t\n\005title\020\t\022\n\n\006beacon\020\n\">\n\022Disrupt"
    "ionProperty\022\013\n\003key\030\001 \002(\t\022\014\n\004type\030\002 \002(\t\022\r"
    "\n\005value\030\003 \002(\t\"\"\n\004Meta\022\013\n\003key\030\001 \002(\t\022\r\n\005va"
    "lue\030\002 \002(\t:D\n\ndisruption\022\034.transit_realti"
    "me.FeedEntity\030\350\007 \001(\0132\021.chaos.Disruption", 2239);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "chaos.proto", &protobuf_RegisterTypes);
  Disruption::default_instance_ = new Disruption();
  Wording::default_instance_ = new Wording();
  Category::default_instance_ = new Category();
  Cause::default_instance_ = new Cause();
  Impact::default_instance_ = new Impact();
  LineSection::default_instance_ = new LineSection();
  PtObject::default_instance_ = new PtObject();
  Severity::default_instance_ = new Severity();
  Tag::default_instance_ = new Tag();
  Message::default_instance_ = new Message();
  Channel::default_instance_ = new Channel();
  DisruptionProperty::default_instance_ = new DisruptionProperty();
  Meta::default_instance_ = new Meta();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::transit_realtime::FeedEntity::default_instance(),
    1000, 11, false, false,
    &::chaos::Disruption::default_instance());
  Disruption::default_instance_->InitAsDefaultInstance();
  Wording::default_instance_->InitAsDefaultInstance();
  Category::default_instance_->InitAsDefaultInstance();
  Cause::default_instance_->InitAsDefaultInstance();
  Impact::default_instance_->InitAsDefaultInstance();
  LineSection::default_instance_->InitAsDefaultInstance();
  PtObject::default_instance_->InitAsDefaultInstance();
  Severity::default_instance_->InitAsDefaultInstance();
  Tag::default_instance_->InitAsDefaultInstance();
  Message::default_instance_->InitAsDefaultInstance();
  Channel::default_instance_->InitAsDefaultInstance();
  DisruptionProperty::default_instance_->InitAsDefaultInstance();
  Meta::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_chaos_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_chaos_2eproto {
  StaticDescriptorInitializer_chaos_2eproto() {
    protobuf_AddDesc_chaos_2eproto();
  }
} static_descriptor_initializer_chaos_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Disruption::kIdFieldNumber;
const int Disruption::kReferenceFieldNumber;
const int Disruption::kPublicationPeriodFieldNumber;
const int Disruption::kCreatedAtFieldNumber;
const int Disruption::kUpdatedAtFieldNumber;
const int Disruption::kCauseFieldNumber;
const int Disruption::kImpactsFieldNumber;
const int Disruption::kTagsFieldNumber;
const int Disruption::kNoteFieldNumber;
const int Disruption::kLocalizationFieldNumber;
const int Disruption::kContributorFieldNumber;
const int Disruption::kPropertiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Disruption::Disruption()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:chaos.Disruption)
}

void Disruption::InitAsDefaultInstance() {
  publication_period_ = const_cast< ::transit_realtime::TimeRange*>(&::transit_realtime::TimeRange::default_instance());
  cause_ = const_cast< ::chaos::Cause*>(&::chaos::Cause::default_instance());
}

Disruption::Disruption(const Disruption& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:chaos.Disruption)
}

void Disruption::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reference_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publication_period_ = NULL;
  created_at_ = GOOGLE_ULONGLONG(0);
  updated_at_ = GOOGLE_ULONGLONG(0);
  cause_ = NULL;
  note_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contributor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Disruption::~Disruption() {
  // @@protoc_insertion_point(destructor:chaos.Disruption)
  SharedDtor();
}

void Disruption::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reference_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  note_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contributor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete publication_period_;
    delete cause_;
  }
}

void Disruption::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Disruption::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Disruption_descriptor_;
}

const Disruption& Disruption::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_chaos_2eproto();
  return *default_instance_;
}

Disruption* Disruption::default_instance_ = NULL;

Disruption* Disruption::New(::google::protobuf::Arena* arena) const {
  Disruption* n = new Disruption;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Disruption::Clear() {
// @@protoc_insertion_point(message_clear_start:chaos.Disruption)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Disruption, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Disruption*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(created_at_, updated_at_);
    if (has_id()) {
      id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_reference()) {
      reference_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_publication_period()) {
      if (publication_period_ != NULL) publication_period_->::transit_realtime::TimeRange::Clear();
    }
    if (has_cause()) {
      if (cause_ != NULL) cause_->::chaos::Cause::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 1280u) {
    if (has_note()) {
      note_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_contributor()) {
      contributor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  impacts_.Clear();
  tags_.Clear();
  localization_.Clear();
  properties_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Disruption::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chaos.Disruption)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chaos.Disruption.id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_reference;
        break;
      }

      // optional string reference = 3;
      case 3: {
        if (tag == 26) {
         parse_reference:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reference()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reference().data(), this->reference().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chaos.Disruption.reference");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_publication_period;
        break;
      }

      // optional .transit_realtime.TimeRange publication_period = 4;
      case 4: {
        if (tag == 34) {
         parse_publication_period:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_publication_period()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_created_at;
        break;
      }

      // optional uint64 created_at = 6;
      case 6: {
        if (tag == 48) {
         parse_created_at:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &created_at_)));
          set_has_created_at();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_updated_at;
        break;
      }

      // optional uint64 updated_at = 7;
      case 7: {
        if (tag == 56) {
         parse_updated_at:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &updated_at_)));
          set_has_updated_at();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_cause;
        break;
      }

      // optional .chaos.Cause cause = 8;
      case 8: {
        if (tag == 66) {
         parse_cause:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cause()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_impacts;
        break;
      }

      // repeated .chaos.Impact impacts = 9;
      case 9: {
        if (tag == 74) {
         parse_impacts:
          DO_(input->IncrementRecursionDepth());
         parse_loop_impacts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_impacts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_loop_impacts;
        if (input->ExpectTag(90)) goto parse_loop_tags;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .chaos.Tag tags = 11;
      case 11: {
        if (tag == 90) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_tags:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_tags()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_loop_tags;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(98)) goto parse_note;
        break;
      }

      // optional string note = 12;
      case 12: {
        if (tag == 98) {
         parse_note:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_note()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->note().data(), this->note().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chaos.Disruption.note");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_localization;
        break;
      }

      // repeated .chaos.PtObject localization = 13;
      case 13: {
        if (tag == 106) {
         parse_localization:
          DO_(input->IncrementRecursionDepth());
         parse_loop_localization:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_localization()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_loop_localization;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(114)) goto parse_contributor;
        break;
      }

      // optional string contributor = 14;
      case 14: {
        if (tag == 114) {
         parse_contributor:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contributor()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->contributor().data(), this->contributor().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chaos.Disruption.contributor");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_properties;
        break;
      }

      // repeated .chaos.DisruptionProperty properties = 15;
      case 15: {
        if (tag == 122) {
         parse_properties:
          DO_(input->IncrementRecursionDepth());
         parse_loop_properties:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_properties()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_loop_properties;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chaos.Disruption)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chaos.Disruption)
  return false;
#undef DO_
}

void Disruption::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chaos.Disruption)
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Disruption.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional string reference = 3;
  if (has_reference()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reference().data(), this->reference().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Disruption.reference");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->reference(), output);
  }

  // optional .transit_realtime.TimeRange publication_period = 4;
  if (has_publication_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->publication_period_, output);
  }

  // optional uint64 created_at = 6;
  if (has_created_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->created_at(), output);
  }

  // optional uint64 updated_at = 7;
  if (has_updated_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->updated_at(), output);
  }

  // optional .chaos.Cause cause = 8;
  if (has_cause()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->cause_, output);
  }

  // repeated .chaos.Impact impacts = 9;
  for (unsigned int i = 0, n = this->impacts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->impacts(i), output);
  }

  // repeated .chaos.Tag tags = 11;
  for (unsigned int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->tags(i), output);
  }

  // optional string note = 12;
  if (has_note()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->note().data(), this->note().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Disruption.note");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->note(), output);
  }

  // repeated .chaos.PtObject localization = 13;
  for (unsigned int i = 0, n = this->localization_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->localization(i), output);
  }

  // optional string contributor = 14;
  if (has_contributor()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->contributor().data(), this->contributor().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Disruption.contributor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->contributor(), output);
  }

  // repeated .chaos.DisruptionProperty properties = 15;
  for (unsigned int i = 0, n = this->properties_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->properties(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chaos.Disruption)
}

::google::protobuf::uint8* Disruption::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:chaos.Disruption)
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Disruption.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string reference = 3;
  if (has_reference()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reference().data(), this->reference().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Disruption.reference");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->reference(), target);
  }

  // optional .transit_realtime.TimeRange publication_period = 4;
  if (has_publication_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->publication_period_, false, target);
  }

  // optional uint64 created_at = 6;
  if (has_created_at()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->created_at(), target);
  }

  // optional uint64 updated_at = 7;
  if (has_updated_at()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->updated_at(), target);
  }

  // optional .chaos.Cause cause = 8;
  if (has_cause()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->cause_, false, target);
  }

  // repeated .chaos.Impact impacts = 9;
  for (unsigned int i = 0, n = this->impacts_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->impacts(i), false, target);
  }

  // repeated .chaos.Tag tags = 11;
  for (unsigned int i = 0, n = this->tags_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, this->tags(i), false, target);
  }

  // optional string note = 12;
  if (has_note()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->note().data(), this->note().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Disruption.note");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->note(), target);
  }

  // repeated .chaos.PtObject localization = 13;
  for (unsigned int i = 0, n = this->localization_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, this->localization(i), false, target);
  }

  // optional string contributor = 14;
  if (has_contributor()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->contributor().data(), this->contributor().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Disruption.contributor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->contributor(), target);
  }

  // repeated .chaos.DisruptionProperty properties = 15;
  for (unsigned int i = 0, n = this->properties_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, this->properties(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chaos.Disruption)
  return target;
}

int Disruption::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:chaos.Disruption)
  int total_size = 0;

  // required string id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }
  if (_has_bits_[1 / 32] & 62u) {
    // optional string reference = 3;
    if (has_reference()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reference());
    }

    // optional .transit_realtime.TimeRange publication_period = 4;
    if (has_publication_period()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->publication_period_);
    }

    // optional uint64 created_at = 6;
    if (has_created_at()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->created_at());
    }

    // optional uint64 updated_at = 7;
    if (has_updated_at()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->updated_at());
    }

    // optional .chaos.Cause cause = 8;
    if (has_cause()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->cause_);
    }

  }
  if (_has_bits_[8 / 32] & 1280u) {
    // optional string note = 12;
    if (has_note()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->note());
    }

    // optional string contributor = 14;
    if (has_contributor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->contributor());
    }

  }
  // repeated .chaos.Impact impacts = 9;
  total_size += 1 * this->impacts_size();
  for (int i = 0; i < this->impacts_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->impacts(i));
  }

  // repeated .chaos.Tag tags = 11;
  total_size += 1 * this->tags_size();
  for (int i = 0; i < this->tags_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tags(i));
  }

  // repeated .chaos.PtObject localization = 13;
  total_size += 1 * this->localization_size();
  for (int i = 0; i < this->localization_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->localization(i));
  }

  // repeated .chaos.DisruptionProperty properties = 15;
  total_size += 1 * this->properties_size();
  for (int i = 0; i < this->properties_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->properties(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Disruption::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chaos.Disruption)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Disruption* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Disruption>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chaos.Disruption)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chaos.Disruption)
    MergeFrom(*source);
  }
}

void Disruption::MergeFrom(const Disruption& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chaos.Disruption)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  impacts_.MergeFrom(from.impacts_);
  tags_.MergeFrom(from.tags_);
  localization_.MergeFrom(from.localization_);
  properties_.MergeFrom(from.properties_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (from.has_reference()) {
      set_has_reference();
      reference_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reference_);
    }
    if (from.has_publication_period()) {
      mutable_publication_period()->::transit_realtime::TimeRange::MergeFrom(from.publication_period());
    }
    if (from.has_created_at()) {
      set_created_at(from.created_at());
    }
    if (from.has_updated_at()) {
      set_updated_at(from.updated_at());
    }
    if (from.has_cause()) {
      mutable_cause()->::chaos::Cause::MergeFrom(from.cause());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_note()) {
      set_has_note();
      note_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.note_);
    }
    if (from.has_contributor()) {
      set_has_contributor();
      contributor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contributor_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Disruption::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chaos.Disruption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Disruption::CopyFrom(const Disruption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chaos.Disruption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Disruption::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_cause()) {
    if (!this->cause_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->impacts())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->tags())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->localization())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->properties())) return false;
  return true;
}

void Disruption::Swap(Disruption* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Disruption::InternalSwap(Disruption* other) {
  id_.Swap(&other->id_);
  reference_.Swap(&other->reference_);
  std::swap(publication_period_, other->publication_period_);
  std::swap(created_at_, other->created_at_);
  std::swap(updated_at_, other->updated_at_);
  std::swap(cause_, other->cause_);
  impacts_.UnsafeArenaSwap(&other->impacts_);
  tags_.UnsafeArenaSwap(&other->tags_);
  note_.Swap(&other->note_);
  localization_.UnsafeArenaSwap(&other->localization_);
  contributor_.Swap(&other->contributor_);
  properties_.UnsafeArenaSwap(&other->properties_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Disruption::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Disruption_descriptor_;
  metadata.reflection = Disruption_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Disruption

// required string id = 1;
bool Disruption::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Disruption::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void Disruption::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void Disruption::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
 const ::std::string& Disruption::id() const {
  // @@protoc_insertion_point(field_get:chaos.Disruption.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Disruption::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chaos.Disruption.id)
}
 void Disruption::set_id(const char* value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chaos.Disruption.id)
}
 void Disruption::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chaos.Disruption.id)
}
 ::std::string* Disruption::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:chaos.Disruption.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Disruption::release_id() {
  // @@protoc_insertion_point(field_release:chaos.Disruption.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Disruption::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:chaos.Disruption.id)
}

// optional string reference = 3;
bool Disruption::has_reference() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Disruption::set_has_reference() {
  _has_bits_[0] |= 0x00000002u;
}
void Disruption::clear_has_reference() {
  _has_bits_[0] &= ~0x00000002u;
}
void Disruption::clear_reference() {
  reference_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_reference();
}
 const ::std::string& Disruption::reference() const {
  // @@protoc_insertion_point(field_get:chaos.Disruption.reference)
  return reference_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Disruption::set_reference(const ::std::string& value) {
  set_has_reference();
  reference_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chaos.Disruption.reference)
}
 void Disruption::set_reference(const char* value) {
  set_has_reference();
  reference_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chaos.Disruption.reference)
}
 void Disruption::set_reference(const char* value, size_t size) {
  set_has_reference();
  reference_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chaos.Disruption.reference)
}
 ::std::string* Disruption::mutable_reference() {
  set_has_reference();
  // @@protoc_insertion_point(field_mutable:chaos.Disruption.reference)
  return reference_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Disruption::release_reference() {
  // @@protoc_insertion_point(field_release:chaos.Disruption.reference)
  clear_has_reference();
  return reference_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Disruption::set_allocated_reference(::std::string* reference) {
  if (reference != NULL) {
    set_has_reference();
  } else {
    clear_has_reference();
  }
  reference_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reference);
  // @@protoc_insertion_point(field_set_allocated:chaos.Disruption.reference)
}

// optional .transit_realtime.TimeRange publication_period = 4;
bool Disruption::has_publication_period() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Disruption::set_has_publication_period() {
  _has_bits_[0] |= 0x00000004u;
}
void Disruption::clear_has_publication_period() {
  _has_bits_[0] &= ~0x00000004u;
}
void Disruption::clear_publication_period() {
  if (publication_period_ != NULL) publication_period_->::transit_realtime::TimeRange::Clear();
  clear_has_publication_period();
}
const ::transit_realtime::TimeRange& Disruption::publication_period() const {
  // @@protoc_insertion_point(field_get:chaos.Disruption.publication_period)
  return publication_period_ != NULL ? *publication_period_ : *default_instance_->publication_period_;
}
::transit_realtime::TimeRange* Disruption::mutable_publication_period() {
  set_has_publication_period();
  if (publication_period_ == NULL) {
    publication_period_ = new ::transit_realtime::TimeRange;
  }
  // @@protoc_insertion_point(field_mutable:chaos.Disruption.publication_period)
  return publication_period_;
}
::transit_realtime::TimeRange* Disruption::release_publication_period() {
  // @@protoc_insertion_point(field_release:chaos.Disruption.publication_period)
  clear_has_publication_period();
  ::transit_realtime::TimeRange* temp = publication_period_;
  publication_period_ = NULL;
  return temp;
}
void Disruption::set_allocated_publication_period(::transit_realtime::TimeRange* publication_period) {
  delete publication_period_;
  publication_period_ = publication_period;
  if (publication_period) {
    set_has_publication_period();
  } else {
    clear_has_publication_period();
  }
  // @@protoc_insertion_point(field_set_allocated:chaos.Disruption.publication_period)
}

// optional uint64 created_at = 6;
bool Disruption::has_created_at() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Disruption::set_has_created_at() {
  _has_bits_[0] |= 0x00000008u;
}
void Disruption::clear_has_created_at() {
  _has_bits_[0] &= ~0x00000008u;
}
void Disruption::clear_created_at() {
  created_at_ = GOOGLE_ULONGLONG(0);
  clear_has_created_at();
}
 ::google::protobuf::uint64 Disruption::created_at() const {
  // @@protoc_insertion_point(field_get:chaos.Disruption.created_at)
  return created_at_;
}
 void Disruption::set_created_at(::google::protobuf::uint64 value) {
  set_has_created_at();
  created_at_ = value;
  // @@protoc_insertion_point(field_set:chaos.Disruption.created_at)
}

// optional uint64 updated_at = 7;
bool Disruption::has_updated_at() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Disruption::set_has_updated_at() {
  _has_bits_[0] |= 0x00000010u;
}
void Disruption::clear_has_updated_at() {
  _has_bits_[0] &= ~0x00000010u;
}
void Disruption::clear_updated_at() {
  updated_at_ = GOOGLE_ULONGLONG(0);
  clear_has_updated_at();
}
 ::google::protobuf::uint64 Disruption::updated_at() const {
  // @@protoc_insertion_point(field_get:chaos.Disruption.updated_at)
  return updated_at_;
}
 void Disruption::set_updated_at(::google::protobuf::uint64 value) {
  set_has_updated_at();
  updated_at_ = value;
  // @@protoc_insertion_point(field_set:chaos.Disruption.updated_at)
}

// optional .chaos.Cause cause = 8;
bool Disruption::has_cause() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Disruption::set_has_cause() {
  _has_bits_[0] |= 0x00000020u;
}
void Disruption::clear_has_cause() {
  _has_bits_[0] &= ~0x00000020u;
}
void Disruption::clear_cause() {
  if (cause_ != NULL) cause_->::chaos::Cause::Clear();
  clear_has_cause();
}
const ::chaos::Cause& Disruption::cause() const {
  // @@protoc_insertion_point(field_get:chaos.Disruption.cause)
  return cause_ != NULL ? *cause_ : *default_instance_->cause_;
}
::chaos::Cause* Disruption::mutable_cause() {
  set_has_cause();
  if (cause_ == NULL) {
    cause_ = new ::chaos::Cause;
  }
  // @@protoc_insertion_point(field_mutable:chaos.Disruption.cause)
  return cause_;
}
::chaos::Cause* Disruption::release_cause() {
  // @@protoc_insertion_point(field_release:chaos.Disruption.cause)
  clear_has_cause();
  ::chaos::Cause* temp = cause_;
  cause_ = NULL;
  return temp;
}
void Disruption::set_allocated_cause(::chaos::Cause* cause) {
  delete cause_;
  cause_ = cause;
  if (cause) {
    set_has_cause();
  } else {
    clear_has_cause();
  }
  // @@protoc_insertion_point(field_set_allocated:chaos.Disruption.cause)
}

// repeated .chaos.Impact impacts = 9;
int Disruption::impacts_size() const {
  return impacts_.size();
}
void Disruption::clear_impacts() {
  impacts_.Clear();
}
const ::chaos::Impact& Disruption::impacts(int index) const {
  // @@protoc_insertion_point(field_get:chaos.Disruption.impacts)
  return impacts_.Get(index);
}
::chaos::Impact* Disruption::mutable_impacts(int index) {
  // @@protoc_insertion_point(field_mutable:chaos.Disruption.impacts)
  return impacts_.Mutable(index);
}
::chaos::Impact* Disruption::add_impacts() {
  // @@protoc_insertion_point(field_add:chaos.Disruption.impacts)
  return impacts_.Add();
}
::google::protobuf::RepeatedPtrField< ::chaos::Impact >*
Disruption::mutable_impacts() {
  // @@protoc_insertion_point(field_mutable_list:chaos.Disruption.impacts)
  return &impacts_;
}
const ::google::protobuf::RepeatedPtrField< ::chaos::Impact >&
Disruption::impacts() const {
  // @@protoc_insertion_point(field_list:chaos.Disruption.impacts)
  return impacts_;
}

// repeated .chaos.Tag tags = 11;
int Disruption::tags_size() const {
  return tags_.size();
}
void Disruption::clear_tags() {
  tags_.Clear();
}
const ::chaos::Tag& Disruption::tags(int index) const {
  // @@protoc_insertion_point(field_get:chaos.Disruption.tags)
  return tags_.Get(index);
}
::chaos::Tag* Disruption::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:chaos.Disruption.tags)
  return tags_.Mutable(index);
}
::chaos::Tag* Disruption::add_tags() {
  // @@protoc_insertion_point(field_add:chaos.Disruption.tags)
  return tags_.Add();
}
::google::protobuf::RepeatedPtrField< ::chaos::Tag >*
Disruption::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:chaos.Disruption.tags)
  return &tags_;
}
const ::google::protobuf::RepeatedPtrField< ::chaos::Tag >&
Disruption::tags() const {
  // @@protoc_insertion_point(field_list:chaos.Disruption.tags)
  return tags_;
}

// optional string note = 12;
bool Disruption::has_note() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Disruption::set_has_note() {
  _has_bits_[0] |= 0x00000100u;
}
void Disruption::clear_has_note() {
  _has_bits_[0] &= ~0x00000100u;
}
void Disruption::clear_note() {
  note_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_note();
}
 const ::std::string& Disruption::note() const {
  // @@protoc_insertion_point(field_get:chaos.Disruption.note)
  return note_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Disruption::set_note(const ::std::string& value) {
  set_has_note();
  note_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chaos.Disruption.note)
}
 void Disruption::set_note(const char* value) {
  set_has_note();
  note_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chaos.Disruption.note)
}
 void Disruption::set_note(const char* value, size_t size) {
  set_has_note();
  note_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chaos.Disruption.note)
}
 ::std::string* Disruption::mutable_note() {
  set_has_note();
  // @@protoc_insertion_point(field_mutable:chaos.Disruption.note)
  return note_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Disruption::release_note() {
  // @@protoc_insertion_point(field_release:chaos.Disruption.note)
  clear_has_note();
  return note_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Disruption::set_allocated_note(::std::string* note) {
  if (note != NULL) {
    set_has_note();
  } else {
    clear_has_note();
  }
  note_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), note);
  // @@protoc_insertion_point(field_set_allocated:chaos.Disruption.note)
}

// repeated .chaos.PtObject localization = 13;
int Disruption::localization_size() const {
  return localization_.size();
}
void Disruption::clear_localization() {
  localization_.Clear();
}
const ::chaos::PtObject& Disruption::localization(int index) const {
  // @@protoc_insertion_point(field_get:chaos.Disruption.localization)
  return localization_.Get(index);
}
::chaos::PtObject* Disruption::mutable_localization(int index) {
  // @@protoc_insertion_point(field_mutable:chaos.Disruption.localization)
  return localization_.Mutable(index);
}
::chaos::PtObject* Disruption::add_localization() {
  // @@protoc_insertion_point(field_add:chaos.Disruption.localization)
  return localization_.Add();
}
::google::protobuf::RepeatedPtrField< ::chaos::PtObject >*
Disruption::mutable_localization() {
  // @@protoc_insertion_point(field_mutable_list:chaos.Disruption.localization)
  return &localization_;
}
const ::google::protobuf::RepeatedPtrField< ::chaos::PtObject >&
Disruption::localization() const {
  // @@protoc_insertion_point(field_list:chaos.Disruption.localization)
  return localization_;
}

// optional string contributor = 14;
bool Disruption::has_contributor() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void Disruption::set_has_contributor() {
  _has_bits_[0] |= 0x00000400u;
}
void Disruption::clear_has_contributor() {
  _has_bits_[0] &= ~0x00000400u;
}
void Disruption::clear_contributor() {
  contributor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_contributor();
}
 const ::std::string& Disruption::contributor() const {
  // @@protoc_insertion_point(field_get:chaos.Disruption.contributor)
  return contributor_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Disruption::set_contributor(const ::std::string& value) {
  set_has_contributor();
  contributor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chaos.Disruption.contributor)
}
 void Disruption::set_contributor(const char* value) {
  set_has_contributor();
  contributor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chaos.Disruption.contributor)
}
 void Disruption::set_contributor(const char* value, size_t size) {
  set_has_contributor();
  contributor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chaos.Disruption.contributor)
}
 ::std::string* Disruption::mutable_contributor() {
  set_has_contributor();
  // @@protoc_insertion_point(field_mutable:chaos.Disruption.contributor)
  return contributor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Disruption::release_contributor() {
  // @@protoc_insertion_point(field_release:chaos.Disruption.contributor)
  clear_has_contributor();
  return contributor_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Disruption::set_allocated_contributor(::std::string* contributor) {
  if (contributor != NULL) {
    set_has_contributor();
  } else {
    clear_has_contributor();
  }
  contributor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contributor);
  // @@protoc_insertion_point(field_set_allocated:chaos.Disruption.contributor)
}

// repeated .chaos.DisruptionProperty properties = 15;
int Disruption::properties_size() const {
  return properties_.size();
}
void Disruption::clear_properties() {
  properties_.Clear();
}
const ::chaos::DisruptionProperty& Disruption::properties(int index) const {
  // @@protoc_insertion_point(field_get:chaos.Disruption.properties)
  return properties_.Get(index);
}
::chaos::DisruptionProperty* Disruption::mutable_properties(int index) {
  // @@protoc_insertion_point(field_mutable:chaos.Disruption.properties)
  return properties_.Mutable(index);
}
::chaos::DisruptionProperty* Disruption::add_properties() {
  // @@protoc_insertion_point(field_add:chaos.Disruption.properties)
  return properties_.Add();
}
::google::protobuf::RepeatedPtrField< ::chaos::DisruptionProperty >*
Disruption::mutable_properties() {
  // @@protoc_insertion_point(field_mutable_list:chaos.Disruption.properties)
  return &properties_;
}
const ::google::protobuf::RepeatedPtrField< ::chaos::DisruptionProperty >&
Disruption::properties() const {
  // @@protoc_insertion_point(field_list:chaos.Disruption.properties)
  return properties_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Wording::kKeyFieldNumber;
const int Wording::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Wording::Wording()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:chaos.Wording)
}

void Wording::InitAsDefaultInstance() {
}

Wording::Wording(const Wording& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:chaos.Wording)
}

void Wording::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Wording::~Wording() {
  // @@protoc_insertion_point(destructor:chaos.Wording)
  SharedDtor();
}

void Wording::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Wording::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Wording::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Wording_descriptor_;
}

const Wording& Wording::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_chaos_2eproto();
  return *default_instance_;
}

Wording* Wording::default_instance_ = NULL;

Wording* Wording::New(::google::protobuf::Arena* arena) const {
  Wording* n = new Wording;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Wording::Clear() {
// @@protoc_insertion_point(message_clear_start:chaos.Wording)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_key()) {
      key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_value()) {
      value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Wording::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chaos.Wording)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chaos.Wording.key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // required string value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chaos.Wording.value");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chaos.Wording)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chaos.Wording)
  return false;
#undef DO_
}

void Wording::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chaos.Wording)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Wording.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // required string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Wording.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chaos.Wording)
}

::google::protobuf::uint8* Wording::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:chaos.Wording)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Wording.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // required string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Wording.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chaos.Wording)
  return target;
}

int Wording::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:chaos.Wording)
  int total_size = 0;

  if (has_key()) {
    // required string key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  if (has_value()) {
    // required string value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  return total_size;
}
int Wording::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:chaos.Wording)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());

    // required string value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Wording::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chaos.Wording)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Wording* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Wording>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chaos.Wording)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chaos.Wording)
    MergeFrom(*source);
  }
}

void Wording::MergeFrom(const Wording& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chaos.Wording)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (from.has_value()) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Wording::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chaos.Wording)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Wording::CopyFrom(const Wording& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chaos.Wording)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Wording::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Wording::Swap(Wording* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Wording::InternalSwap(Wording* other) {
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Wording::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Wording_descriptor_;
  metadata.reflection = Wording_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Wording

// required string key = 1;
bool Wording::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Wording::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void Wording::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void Wording::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
 const ::std::string& Wording::key() const {
  // @@protoc_insertion_point(field_get:chaos.Wording.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Wording::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chaos.Wording.key)
}
 void Wording::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chaos.Wording.key)
}
 void Wording::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chaos.Wording.key)
}
 ::std::string* Wording::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:chaos.Wording.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Wording::release_key() {
  // @@protoc_insertion_point(field_release:chaos.Wording.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Wording::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:chaos.Wording.key)
}

// required string value = 2;
bool Wording::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Wording::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void Wording::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void Wording::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
 const ::std::string& Wording::value() const {
  // @@protoc_insertion_point(field_get:chaos.Wording.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Wording::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chaos.Wording.value)
}
 void Wording::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chaos.Wording.value)
}
 void Wording::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chaos.Wording.value)
}
 ::std::string* Wording::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:chaos.Wording.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Wording::release_value() {
  // @@protoc_insertion_point(field_release:chaos.Wording.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Wording::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:chaos.Wording.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Category::kIdFieldNumber;
const int Category::kNameFieldNumber;
const int Category::kCreatedAtFieldNumber;
const int Category::kUpdatedAtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Category::Category()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:chaos.Category)
}

void Category::InitAsDefaultInstance() {
}

Category::Category(const Category& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:chaos.Category)
}

void Category::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  created_at_ = GOOGLE_ULONGLONG(0);
  updated_at_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Category::~Category() {
  // @@protoc_insertion_point(destructor:chaos.Category)
  SharedDtor();
}

void Category::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Category::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Category::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Category_descriptor_;
}

const Category& Category::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_chaos_2eproto();
  return *default_instance_;
}

Category* Category::default_instance_ = NULL;

Category* Category::New(::google::protobuf::Arena* arena) const {
  Category* n = new Category;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Category::Clear() {
// @@protoc_insertion_point(message_clear_start:chaos.Category)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Category, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Category*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(created_at_, updated_at_);
    if (has_id()) {
      id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Category::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chaos.Category)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chaos.Category.id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chaos.Category.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_created_at;
        break;
      }

      // optional uint64 created_at = 3;
      case 3: {
        if (tag == 24) {
         parse_created_at:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &created_at_)));
          set_has_created_at();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_updated_at;
        break;
      }

      // optional uint64 updated_at = 4;
      case 4: {
        if (tag == 32) {
         parse_updated_at:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &updated_at_)));
          set_has_updated_at();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chaos.Category)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chaos.Category)
  return false;
#undef DO_
}

void Category::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chaos.Category)
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Category.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Category.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional uint64 created_at = 3;
  if (has_created_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->created_at(), output);
  }

  // optional uint64 updated_at = 4;
  if (has_updated_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->updated_at(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chaos.Category)
}

::google::protobuf::uint8* Category::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:chaos.Category)
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Category.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Category.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional uint64 created_at = 3;
  if (has_created_at()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->created_at(), target);
  }

  // optional uint64 updated_at = 4;
  if (has_updated_at()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->updated_at(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chaos.Category)
  return target;
}

int Category::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:chaos.Category)
  int total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  return total_size;
}
int Category::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:chaos.Category)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 12u) {
    // optional uint64 created_at = 3;
    if (has_created_at()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->created_at());
    }

    // optional uint64 updated_at = 4;
    if (has_updated_at()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->updated_at());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Category::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chaos.Category)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Category* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Category>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chaos.Category)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chaos.Category)
    MergeFrom(*source);
  }
}

void Category::MergeFrom(const Category& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chaos.Category)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_created_at()) {
      set_created_at(from.created_at());
    }
    if (from.has_updated_at()) {
      set_updated_at(from.updated_at());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Category::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chaos.Category)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Category::CopyFrom(const Category& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chaos.Category)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Category::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Category::Swap(Category* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Category::InternalSwap(Category* other) {
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  std::swap(created_at_, other->created_at_);
  std::swap(updated_at_, other->updated_at_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Category::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Category_descriptor_;
  metadata.reflection = Category_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Category

// required string id = 1;
bool Category::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Category::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void Category::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void Category::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
 const ::std::string& Category::id() const {
  // @@protoc_insertion_point(field_get:chaos.Category.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Category::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chaos.Category.id)
}
 void Category::set_id(const char* value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chaos.Category.id)
}
 void Category::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chaos.Category.id)
}
 ::std::string* Category::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:chaos.Category.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Category::release_id() {
  // @@protoc_insertion_point(field_release:chaos.Category.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Category::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:chaos.Category.id)
}

// required string name = 2;
bool Category::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Category::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void Category::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void Category::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& Category::name() const {
  // @@protoc_insertion_point(field_get:chaos.Category.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Category::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chaos.Category.name)
}
 void Category::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chaos.Category.name)
}
 void Category::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chaos.Category.name)
}
 ::std::string* Category::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:chaos.Category.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Category::release_name() {
  // @@protoc_insertion_point(field_release:chaos.Category.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Category::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:chaos.Category.name)
}

// optional uint64 created_at = 3;
bool Category::has_created_at() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Category::set_has_created_at() {
  _has_bits_[0] |= 0x00000004u;
}
void Category::clear_has_created_at() {
  _has_bits_[0] &= ~0x00000004u;
}
void Category::clear_created_at() {
  created_at_ = GOOGLE_ULONGLONG(0);
  clear_has_created_at();
}
 ::google::protobuf::uint64 Category::created_at() const {
  // @@protoc_insertion_point(field_get:chaos.Category.created_at)
  return created_at_;
}
 void Category::set_created_at(::google::protobuf::uint64 value) {
  set_has_created_at();
  created_at_ = value;
  // @@protoc_insertion_point(field_set:chaos.Category.created_at)
}

// optional uint64 updated_at = 4;
bool Category::has_updated_at() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Category::set_has_updated_at() {
  _has_bits_[0] |= 0x00000008u;
}
void Category::clear_has_updated_at() {
  _has_bits_[0] &= ~0x00000008u;
}
void Category::clear_updated_at() {
  updated_at_ = GOOGLE_ULONGLONG(0);
  clear_has_updated_at();
}
 ::google::protobuf::uint64 Category::updated_at() const {
  // @@protoc_insertion_point(field_get:chaos.Category.updated_at)
  return updated_at_;
}
 void Category::set_updated_at(::google::protobuf::uint64 value) {
  set_has_updated_at();
  updated_at_ = value;
  // @@protoc_insertion_point(field_set:chaos.Category.updated_at)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Cause::kIdFieldNumber;
const int Cause::kWordingFieldNumber;
const int Cause::kCreatedAtFieldNumber;
const int Cause::kUpdatedAtFieldNumber;
const int Cause::kWordingsFieldNumber;
const int Cause::kCategoryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Cause::Cause()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:chaos.Cause)
}

void Cause::InitAsDefaultInstance() {
  category_ = const_cast< ::chaos::Category*>(&::chaos::Category::default_instance());
}

Cause::Cause(const Cause& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:chaos.Cause)
}

void Cause::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wording_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  created_at_ = GOOGLE_ULONGLONG(0);
  updated_at_ = GOOGLE_ULONGLONG(0);
  category_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Cause::~Cause() {
  // @@protoc_insertion_point(destructor:chaos.Cause)
  SharedDtor();
}

void Cause::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wording_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete category_;
  }
}

void Cause::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Cause::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Cause_descriptor_;
}

const Cause& Cause::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_chaos_2eproto();
  return *default_instance_;
}

Cause* Cause::default_instance_ = NULL;

Cause* Cause::New(::google::protobuf::Arena* arena) const {
  Cause* n = new Cause;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Cause::Clear() {
// @@protoc_insertion_point(message_clear_start:chaos.Cause)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Cause, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Cause*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 47u) {
    ZR_(created_at_, updated_at_);
    if (has_id()) {
      id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_wording()) {
      wording_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_category()) {
      if (category_ != NULL) category_->::chaos::Category::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  wordings_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Cause::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chaos.Cause)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chaos.Cause.id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_wording;
        break;
      }

      // optional string wording = 2;
      case 2: {
        if (tag == 18) {
         parse_wording:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_wording()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->wording().data(), this->wording().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chaos.Cause.wording");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_created_at;
        break;
      }

      // optional uint64 created_at = 3;
      case 3: {
        if (tag == 24) {
         parse_created_at:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &created_at_)));
          set_has_created_at();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_updated_at;
        break;
      }

      // optional uint64 updated_at = 4;
      case 4: {
        if (tag == 32) {
         parse_updated_at:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &updated_at_)));
          set_has_updated_at();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_wordings;
        break;
      }

      // repeated .chaos.Wording wordings = 5;
      case 5: {
        if (tag == 42) {
         parse_wordings:
          DO_(input->IncrementRecursionDepth());
         parse_loop_wordings:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_wordings()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_wordings;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(50)) goto parse_category;
        break;
      }

      // optional .chaos.Category category = 6;
      case 6: {
        if (tag == 50) {
         parse_category:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_category()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chaos.Cause)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chaos.Cause)
  return false;
#undef DO_
}

void Cause::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chaos.Cause)
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Cause.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional string wording = 2;
  if (has_wording()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->wording().data(), this->wording().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Cause.wording");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->wording(), output);
  }

  // optional uint64 created_at = 3;
  if (has_created_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->created_at(), output);
  }

  // optional uint64 updated_at = 4;
  if (has_updated_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->updated_at(), output);
  }

  // repeated .chaos.Wording wordings = 5;
  for (unsigned int i = 0, n = this->wordings_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->wordings(i), output);
  }

  // optional .chaos.Category category = 6;
  if (has_category()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->category_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chaos.Cause)
}

::google::protobuf::uint8* Cause::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:chaos.Cause)
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Cause.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string wording = 2;
  if (has_wording()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->wording().data(), this->wording().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Cause.wording");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->wording(), target);
  }

  // optional uint64 created_at = 3;
  if (has_created_at()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->created_at(), target);
  }

  // optional uint64 updated_at = 4;
  if (has_updated_at()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->updated_at(), target);
  }

  // repeated .chaos.Wording wordings = 5;
  for (unsigned int i = 0, n = this->wordings_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->wordings(i), false, target);
  }

  // optional .chaos.Category category = 6;
  if (has_category()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->category_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chaos.Cause)
  return target;
}

int Cause::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:chaos.Cause)
  int total_size = 0;

  // required string id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }
  if (_has_bits_[1 / 32] & 46u) {
    // optional string wording = 2;
    if (has_wording()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->wording());
    }

    // optional uint64 created_at = 3;
    if (has_created_at()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->created_at());
    }

    // optional uint64 updated_at = 4;
    if (has_updated_at()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->updated_at());
    }

    // optional .chaos.Category category = 6;
    if (has_category()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->category_);
    }

  }
  // repeated .chaos.Wording wordings = 5;
  total_size += 1 * this->wordings_size();
  for (int i = 0; i < this->wordings_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->wordings(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Cause::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chaos.Cause)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Cause* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Cause>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chaos.Cause)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chaos.Cause)
    MergeFrom(*source);
  }
}

void Cause::MergeFrom(const Cause& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chaos.Cause)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  wordings_.MergeFrom(from.wordings_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (from.has_wording()) {
      set_has_wording();
      wording_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wording_);
    }
    if (from.has_created_at()) {
      set_created_at(from.created_at());
    }
    if (from.has_updated_at()) {
      set_updated_at(from.updated_at());
    }
    if (from.has_category()) {
      mutable_category()->::chaos::Category::MergeFrom(from.category());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Cause::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chaos.Cause)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cause::CopyFrom(const Cause& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chaos.Cause)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cause::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->wordings())) return false;
  if (has_category()) {
    if (!this->category_->IsInitialized()) return false;
  }
  return true;
}

void Cause::Swap(Cause* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Cause::InternalSwap(Cause* other) {
  id_.Swap(&other->id_);
  wording_.Swap(&other->wording_);
  std::swap(created_at_, other->created_at_);
  std::swap(updated_at_, other->updated_at_);
  wordings_.UnsafeArenaSwap(&other->wordings_);
  std::swap(category_, other->category_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Cause::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Cause_descriptor_;
  metadata.reflection = Cause_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Cause

// required string id = 1;
bool Cause::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Cause::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void Cause::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void Cause::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
 const ::std::string& Cause::id() const {
  // @@protoc_insertion_point(field_get:chaos.Cause.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Cause::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chaos.Cause.id)
}
 void Cause::set_id(const char* value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chaos.Cause.id)
}
 void Cause::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chaos.Cause.id)
}
 ::std::string* Cause::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:chaos.Cause.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Cause::release_id() {
  // @@protoc_insertion_point(field_release:chaos.Cause.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Cause::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:chaos.Cause.id)
}

// optional string wording = 2;
bool Cause::has_wording() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Cause::set_has_wording() {
  _has_bits_[0] |= 0x00000002u;
}
void Cause::clear_has_wording() {
  _has_bits_[0] &= ~0x00000002u;
}
void Cause::clear_wording() {
  wording_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_wording();
}
 const ::std::string& Cause::wording() const {
  // @@protoc_insertion_point(field_get:chaos.Cause.wording)
  return wording_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Cause::set_wording(const ::std::string& value) {
  set_has_wording();
  wording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chaos.Cause.wording)
}
 void Cause::set_wording(const char* value) {
  set_has_wording();
  wording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chaos.Cause.wording)
}
 void Cause::set_wording(const char* value, size_t size) {
  set_has_wording();
  wording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chaos.Cause.wording)
}
 ::std::string* Cause::mutable_wording() {
  set_has_wording();
  // @@protoc_insertion_point(field_mutable:chaos.Cause.wording)
  return wording_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Cause::release_wording() {
  // @@protoc_insertion_point(field_release:chaos.Cause.wording)
  clear_has_wording();
  return wording_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Cause::set_allocated_wording(::std::string* wording) {
  if (wording != NULL) {
    set_has_wording();
  } else {
    clear_has_wording();
  }
  wording_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wording);
  // @@protoc_insertion_point(field_set_allocated:chaos.Cause.wording)
}

// optional uint64 created_at = 3;
bool Cause::has_created_at() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Cause::set_has_created_at() {
  _has_bits_[0] |= 0x00000004u;
}
void Cause::clear_has_created_at() {
  _has_bits_[0] &= ~0x00000004u;
}
void Cause::clear_created_at() {
  created_at_ = GOOGLE_ULONGLONG(0);
  clear_has_created_at();
}
 ::google::protobuf::uint64 Cause::created_at() const {
  // @@protoc_insertion_point(field_get:chaos.Cause.created_at)
  return created_at_;
}
 void Cause::set_created_at(::google::protobuf::uint64 value) {
  set_has_created_at();
  created_at_ = value;
  // @@protoc_insertion_point(field_set:chaos.Cause.created_at)
}

// optional uint64 updated_at = 4;
bool Cause::has_updated_at() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Cause::set_has_updated_at() {
  _has_bits_[0] |= 0x00000008u;
}
void Cause::clear_has_updated_at() {
  _has_bits_[0] &= ~0x00000008u;
}
void Cause::clear_updated_at() {
  updated_at_ = GOOGLE_ULONGLONG(0);
  clear_has_updated_at();
}
 ::google::protobuf::uint64 Cause::updated_at() const {
  // @@protoc_insertion_point(field_get:chaos.Cause.updated_at)
  return updated_at_;
}
 void Cause::set_updated_at(::google::protobuf::uint64 value) {
  set_has_updated_at();
  updated_at_ = value;
  // @@protoc_insertion_point(field_set:chaos.Cause.updated_at)
}

// repeated .chaos.Wording wordings = 5;
int Cause::wordings_size() const {
  return wordings_.size();
}
void Cause::clear_wordings() {
  wordings_.Clear();
}
const ::chaos::Wording& Cause::wordings(int index) const {
  // @@protoc_insertion_point(field_get:chaos.Cause.wordings)
  return wordings_.Get(index);
}
::chaos::Wording* Cause::mutable_wordings(int index) {
  // @@protoc_insertion_point(field_mutable:chaos.Cause.wordings)
  return wordings_.Mutable(index);
}
::chaos::Wording* Cause::add_wordings() {
  // @@protoc_insertion_point(field_add:chaos.Cause.wordings)
  return wordings_.Add();
}
::google::protobuf::RepeatedPtrField< ::chaos::Wording >*
Cause::mutable_wordings() {
  // @@protoc_insertion_point(field_mutable_list:chaos.Cause.wordings)
  return &wordings_;
}
const ::google::protobuf::RepeatedPtrField< ::chaos::Wording >&
Cause::wordings() const {
  // @@protoc_insertion_point(field_list:chaos.Cause.wordings)
  return wordings_;
}

// optional .chaos.Category category = 6;
bool Cause::has_category() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Cause::set_has_category() {
  _has_bits_[0] |= 0x00000020u;
}
void Cause::clear_has_category() {
  _has_bits_[0] &= ~0x00000020u;
}
void Cause::clear_category() {
  if (category_ != NULL) category_->::chaos::Category::Clear();
  clear_has_category();
}
const ::chaos::Category& Cause::category() const {
  // @@protoc_insertion_point(field_get:chaos.Cause.category)
  return category_ != NULL ? *category_ : *default_instance_->category_;
}
::chaos::Category* Cause::mutable_category() {
  set_has_category();
  if (category_ == NULL) {
    category_ = new ::chaos::Category;
  }
  // @@protoc_insertion_point(field_mutable:chaos.Cause.category)
  return category_;
}
::chaos::Category* Cause::release_category() {
  // @@protoc_insertion_point(field_release:chaos.Cause.category)
  clear_has_category();
  ::chaos::Category* temp = category_;
  category_ = NULL;
  return temp;
}
void Cause::set_allocated_category(::chaos::Category* category) {
  delete category_;
  category_ = category;
  if (category) {
    set_has_category();
  } else {
    clear_has_category();
  }
  // @@protoc_insertion_point(field_set_allocated:chaos.Cause.category)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Impact::kIdFieldNumber;
const int Impact::kCreatedAtFieldNumber;
const int Impact::kUpdatedAtFieldNumber;
const int Impact::kApplicationPeriodsFieldNumber;
const int Impact::kSeverityFieldNumber;
const int Impact::kInformedEntitiesFieldNumber;
const int Impact::kMessagesFieldNumber;
const int Impact::kSendNotificationsFieldNumber;
const int Impact::kNotificationDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Impact::Impact()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:chaos.Impact)
}

void Impact::InitAsDefaultInstance() {
  severity_ = const_cast< ::chaos::Severity*>(&::chaos::Severity::default_instance());
}

Impact::Impact(const Impact& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:chaos.Impact)
}

void Impact::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  created_at_ = GOOGLE_ULONGLONG(0);
  updated_at_ = GOOGLE_ULONGLONG(0);
  severity_ = NULL;
  send_notifications_ = false;
  notification_date_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Impact::~Impact() {
  // @@protoc_insertion_point(destructor:chaos.Impact)
  SharedDtor();
}

void Impact::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete severity_;
  }
}

void Impact::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Impact::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Impact_descriptor_;
}

const Impact& Impact::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_chaos_2eproto();
  return *default_instance_;
}

Impact* Impact::default_instance_ = NULL;

Impact* Impact::New(::google::protobuf::Arena* arena) const {
  Impact* n = new Impact;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Impact::Clear() {
// @@protoc_insertion_point(message_clear_start:chaos.Impact)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Impact, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Impact*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 151u) {
    ZR_(created_at_, updated_at_);
    if (has_id()) {
      id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_severity()) {
      if (severity_ != NULL) severity_->::chaos::Severity::Clear();
    }
    send_notifications_ = false;
  }
  notification_date_ = GOOGLE_ULONGLONG(0);

#undef ZR_HELPER_
#undef ZR_

  application_periods_.Clear();
  informed_entities_.Clear();
  messages_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Impact::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chaos.Impact)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chaos.Impact.id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_created_at;
        break;
      }

      // optional uint64 created_at = 2;
      case 2: {
        if (tag == 16) {
         parse_created_at:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &created_at_)));
          set_has_created_at();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_updated_at;
        break;
      }

      // optional uint64 updated_at = 3;
      case 3: {
        if (tag == 24) {
         parse_updated_at:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &updated_at_)));
          set_has_updated_at();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_application_periods;
        break;
      }

      // repeated .transit_realtime.TimeRange application_periods = 4;
      case 4: {
        if (tag == 34) {
         parse_application_periods:
          DO_(input->IncrementRecursionDepth());
         parse_loop_application_periods:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_application_periods()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_application_periods;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(42)) goto parse_severity;
        break;
      }

      // optional .chaos.Severity severity = 5;
      case 5: {
        if (tag == 42) {
         parse_severity:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_severity()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_informed_entities;
        break;
      }

      // repeated .chaos.PtObject informed_entities = 6;
      case 6: {
        if (tag == 50) {
         parse_informed_entities:
          DO_(input->IncrementRecursionDepth());
         parse_loop_informed_entities:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_informed_entities()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_informed_entities;
        if (input->ExpectTag(58)) goto parse_loop_messages;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .chaos.Message messages = 7;
      case 7: {
        if (tag == 58) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_messages:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_messages()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_loop_messages;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(64)) goto parse_send_notifications;
        break;
      }

      // optional bool send_notifications = 8;
      case 8: {
        if (tag == 64) {
         parse_send_notifications:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &send_notifications_)));
          set_has_send_notifications();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_notification_date;
        break;
      }

      // optional uint64 notification_date = 9;
      case 9: {
        if (tag == 72) {
         parse_notification_date:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &notification_date_)));
          set_has_notification_date();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chaos.Impact)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chaos.Impact)
  return false;
#undef DO_
}

void Impact::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chaos.Impact)
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Impact.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional uint64 created_at = 2;
  if (has_created_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->created_at(), output);
  }

  // optional uint64 updated_at = 3;
  if (has_updated_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->updated_at(), output);
  }

  // repeated .transit_realtime.TimeRange application_periods = 4;
  for (unsigned int i = 0, n = this->application_periods_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->application_periods(i), output);
  }

  // optional .chaos.Severity severity = 5;
  if (has_severity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->severity_, output);
  }

  // repeated .chaos.PtObject informed_entities = 6;
  for (unsigned int i = 0, n = this->informed_entities_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->informed_entities(i), output);
  }

  // repeated .chaos.Message messages = 7;
  for (unsigned int i = 0, n = this->messages_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->messages(i), output);
  }

  // optional bool send_notifications = 8;
  if (has_send_notifications()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->send_notifications(), output);
  }

  // optional uint64 notification_date = 9;
  if (has_notification_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->notification_date(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chaos.Impact)
}

::google::protobuf::uint8* Impact::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:chaos.Impact)
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Impact.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional uint64 created_at = 2;
  if (has_created_at()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->created_at(), target);
  }

  // optional uint64 updated_at = 3;
  if (has_updated_at()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->updated_at(), target);
  }

  // repeated .transit_realtime.TimeRange application_periods = 4;
  for (unsigned int i = 0, n = this->application_periods_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->application_periods(i), false, target);
  }

  // optional .chaos.Severity severity = 5;
  if (has_severity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->severity_, false, target);
  }

  // repeated .chaos.PtObject informed_entities = 6;
  for (unsigned int i = 0, n = this->informed_entities_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->informed_entities(i), false, target);
  }

  // repeated .chaos.Message messages = 7;
  for (unsigned int i = 0, n = this->messages_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->messages(i), false, target);
  }

  // optional bool send_notifications = 8;
  if (has_send_notifications()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->send_notifications(), target);
  }

  // optional uint64 notification_date = 9;
  if (has_notification_date()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->notification_date(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chaos.Impact)
  return target;
}

int Impact::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:chaos.Impact)
  int total_size = 0;

  // required string id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }
  if (_has_bits_[1 / 32] & 150u) {
    // optional uint64 created_at = 2;
    if (has_created_at()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->created_at());
    }

    // optional uint64 updated_at = 3;
    if (has_updated_at()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->updated_at());
    }

    // optional .chaos.Severity severity = 5;
    if (has_severity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->severity_);
    }

    // optional bool send_notifications = 8;
    if (has_send_notifications()) {
      total_size += 1 + 1;
    }

  }
  // optional uint64 notification_date = 9;
  if (has_notification_date()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->notification_date());
  }

  // repeated .transit_realtime.TimeRange application_periods = 4;
  total_size += 1 * this->application_periods_size();
  for (int i = 0; i < this->application_periods_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->application_periods(i));
  }

  // repeated .chaos.PtObject informed_entities = 6;
  total_size += 1 * this->informed_entities_size();
  for (int i = 0; i < this->informed_entities_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->informed_entities(i));
  }

  // repeated .chaos.Message messages = 7;
  total_size += 1 * this->messages_size();
  for (int i = 0; i < this->messages_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->messages(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Impact::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chaos.Impact)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Impact* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Impact>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chaos.Impact)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chaos.Impact)
    MergeFrom(*source);
  }
}

void Impact::MergeFrom(const Impact& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chaos.Impact)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  application_periods_.MergeFrom(from.application_periods_);
  informed_entities_.MergeFrom(from.informed_entities_);
  messages_.MergeFrom(from.messages_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (from.has_created_at()) {
      set_created_at(from.created_at());
    }
    if (from.has_updated_at()) {
      set_updated_at(from.updated_at());
    }
    if (from.has_severity()) {
      mutable_severity()->::chaos::Severity::MergeFrom(from.severity());
    }
    if (from.has_send_notifications()) {
      set_send_notifications(from.send_notifications());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_notification_date()) {
      set_notification_date(from.notification_date());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Impact::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chaos.Impact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Impact::CopyFrom(const Impact& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chaos.Impact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Impact::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_severity()) {
    if (!this->severity_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->informed_entities())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->messages())) return false;
  return true;
}

void Impact::Swap(Impact* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Impact::InternalSwap(Impact* other) {
  id_.Swap(&other->id_);
  std::swap(created_at_, other->created_at_);
  std::swap(updated_at_, other->updated_at_);
  application_periods_.UnsafeArenaSwap(&other->application_periods_);
  std::swap(severity_, other->severity_);
  informed_entities_.UnsafeArenaSwap(&other->informed_entities_);
  messages_.UnsafeArenaSwap(&other->messages_);
  std::swap(send_notifications_, other->send_notifications_);
  std::swap(notification_date_, other->notification_date_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Impact::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Impact_descriptor_;
  metadata.reflection = Impact_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Impact

// required string id = 1;
bool Impact::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Impact::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void Impact::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void Impact::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
 const ::std::string& Impact::id() const {
  // @@protoc_insertion_point(field_get:chaos.Impact.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Impact::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chaos.Impact.id)
}
 void Impact::set_id(const char* value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chaos.Impact.id)
}
 void Impact::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chaos.Impact.id)
}
 ::std::string* Impact::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:chaos.Impact.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Impact::release_id() {
  // @@protoc_insertion_point(field_release:chaos.Impact.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Impact::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:chaos.Impact.id)
}

// optional uint64 created_at = 2;
bool Impact::has_created_at() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Impact::set_has_created_at() {
  _has_bits_[0] |= 0x00000002u;
}
void Impact::clear_has_created_at() {
  _has_bits_[0] &= ~0x00000002u;
}
void Impact::clear_created_at() {
  created_at_ = GOOGLE_ULONGLONG(0);
  clear_has_created_at();
}
 ::google::protobuf::uint64 Impact::created_at() const {
  // @@protoc_insertion_point(field_get:chaos.Impact.created_at)
  return created_at_;
}
 void Impact::set_created_at(::google::protobuf::uint64 value) {
  set_has_created_at();
  created_at_ = value;
  // @@protoc_insertion_point(field_set:chaos.Impact.created_at)
}

// optional uint64 updated_at = 3;
bool Impact::has_updated_at() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Impact::set_has_updated_at() {
  _has_bits_[0] |= 0x00000004u;
}
void Impact::clear_has_updated_at() {
  _has_bits_[0] &= ~0x00000004u;
}
void Impact::clear_updated_at() {
  updated_at_ = GOOGLE_ULONGLONG(0);
  clear_has_updated_at();
}
 ::google::protobuf::uint64 Impact::updated_at() const {
  // @@protoc_insertion_point(field_get:chaos.Impact.updated_at)
  return updated_at_;
}
 void Impact::set_updated_at(::google::protobuf::uint64 value) {
  set_has_updated_at();
  updated_at_ = value;
  // @@protoc_insertion_point(field_set:chaos.Impact.updated_at)
}

// repeated .transit_realtime.TimeRange application_periods = 4;
int Impact::application_periods_size() const {
  return application_periods_.size();
}
void Impact::clear_application_periods() {
  application_periods_.Clear();
}
const ::transit_realtime::TimeRange& Impact::application_periods(int index) const {
  // @@protoc_insertion_point(field_get:chaos.Impact.application_periods)
  return application_periods_.Get(index);
}
::transit_realtime::TimeRange* Impact::mutable_application_periods(int index) {
  // @@protoc_insertion_point(field_mutable:chaos.Impact.application_periods)
  return application_periods_.Mutable(index);
}
::transit_realtime::TimeRange* Impact::add_application_periods() {
  // @@protoc_insertion_point(field_add:chaos.Impact.application_periods)
  return application_periods_.Add();
}
::google::protobuf::RepeatedPtrField< ::transit_realtime::TimeRange >*
Impact::mutable_application_periods() {
  // @@protoc_insertion_point(field_mutable_list:chaos.Impact.application_periods)
  return &application_periods_;
}
const ::google::protobuf::RepeatedPtrField< ::transit_realtime::TimeRange >&
Impact::application_periods() const {
  // @@protoc_insertion_point(field_list:chaos.Impact.application_periods)
  return application_periods_;
}

// optional .chaos.Severity severity = 5;
bool Impact::has_severity() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Impact::set_has_severity() {
  _has_bits_[0] |= 0x00000010u;
}
void Impact::clear_has_severity() {
  _has_bits_[0] &= ~0x00000010u;
}
void Impact::clear_severity() {
  if (severity_ != NULL) severity_->::chaos::Severity::Clear();
  clear_has_severity();
}
const ::chaos::Severity& Impact::severity() const {
  // @@protoc_insertion_point(field_get:chaos.Impact.severity)
  return severity_ != NULL ? *severity_ : *default_instance_->severity_;
}
::chaos::Severity* Impact::mutable_severity() {
  set_has_severity();
  if (severity_ == NULL) {
    severity_ = new ::chaos::Severity;
  }
  // @@protoc_insertion_point(field_mutable:chaos.Impact.severity)
  return severity_;
}
::chaos::Severity* Impact::release_severity() {
  // @@protoc_insertion_point(field_release:chaos.Impact.severity)
  clear_has_severity();
  ::chaos::Severity* temp = severity_;
  severity_ = NULL;
  return temp;
}
void Impact::set_allocated_severity(::chaos::Severity* severity) {
  delete severity_;
  severity_ = severity;
  if (severity) {
    set_has_severity();
  } else {
    clear_has_severity();
  }
  // @@protoc_insertion_point(field_set_allocated:chaos.Impact.severity)
}

// repeated .chaos.PtObject informed_entities = 6;
int Impact::informed_entities_size() const {
  return informed_entities_.size();
}
void Impact::clear_informed_entities() {
  informed_entities_.Clear();
}
const ::chaos::PtObject& Impact::informed_entities(int index) const {
  // @@protoc_insertion_point(field_get:chaos.Impact.informed_entities)
  return informed_entities_.Get(index);
}
::chaos::PtObject* Impact::mutable_informed_entities(int index) {
  // @@protoc_insertion_point(field_mutable:chaos.Impact.informed_entities)
  return informed_entities_.Mutable(index);
}
::chaos::PtObject* Impact::add_informed_entities() {
  // @@protoc_insertion_point(field_add:chaos.Impact.informed_entities)
  return informed_entities_.Add();
}
::google::protobuf::RepeatedPtrField< ::chaos::PtObject >*
Impact::mutable_informed_entities() {
  // @@protoc_insertion_point(field_mutable_list:chaos.Impact.informed_entities)
  return &informed_entities_;
}
const ::google::protobuf::RepeatedPtrField< ::chaos::PtObject >&
Impact::informed_entities() const {
  // @@protoc_insertion_point(field_list:chaos.Impact.informed_entities)
  return informed_entities_;
}

// repeated .chaos.Message messages = 7;
int Impact::messages_size() const {
  return messages_.size();
}
void Impact::clear_messages() {
  messages_.Clear();
}
const ::chaos::Message& Impact::messages(int index) const {
  // @@protoc_insertion_point(field_get:chaos.Impact.messages)
  return messages_.Get(index);
}
::chaos::Message* Impact::mutable_messages(int index) {
  // @@protoc_insertion_point(field_mutable:chaos.Impact.messages)
  return messages_.Mutable(index);
}
::chaos::Message* Impact::add_messages() {
  // @@protoc_insertion_point(field_add:chaos.Impact.messages)
  return messages_.Add();
}
::google::protobuf::RepeatedPtrField< ::chaos::Message >*
Impact::mutable_messages() {
  // @@protoc_insertion_point(field_mutable_list:chaos.Impact.messages)
  return &messages_;
}
const ::google::protobuf::RepeatedPtrField< ::chaos::Message >&
Impact::messages() const {
  // @@protoc_insertion_point(field_list:chaos.Impact.messages)
  return messages_;
}

// optional bool send_notifications = 8;
bool Impact::has_send_notifications() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Impact::set_has_send_notifications() {
  _has_bits_[0] |= 0x00000080u;
}
void Impact::clear_has_send_notifications() {
  _has_bits_[0] &= ~0x00000080u;
}
void Impact::clear_send_notifications() {
  send_notifications_ = false;
  clear_has_send_notifications();
}
 bool Impact::send_notifications() const {
  // @@protoc_insertion_point(field_get:chaos.Impact.send_notifications)
  return send_notifications_;
}
 void Impact::set_send_notifications(bool value) {
  set_has_send_notifications();
  send_notifications_ = value;
  // @@protoc_insertion_point(field_set:chaos.Impact.send_notifications)
}

// optional uint64 notification_date = 9;
bool Impact::has_notification_date() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Impact::set_has_notification_date() {
  _has_bits_[0] |= 0x00000100u;
}
void Impact::clear_has_notification_date() {
  _has_bits_[0] &= ~0x00000100u;
}
void Impact::clear_notification_date() {
  notification_date_ = GOOGLE_ULONGLONG(0);
  clear_has_notification_date();
}
 ::google::protobuf::uint64 Impact::notification_date() const {
  // @@protoc_insertion_point(field_get:chaos.Impact.notification_date)
  return notification_date_;
}
 void Impact::set_notification_date(::google::protobuf::uint64 value) {
  set_has_notification_date();
  notification_date_ = value;
  // @@protoc_insertion_point(field_set:chaos.Impact.notification_date)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LineSection::kLineFieldNumber;
const int LineSection::kStartPointFieldNumber;
const int LineSection::kEndPointFieldNumber;
const int LineSection::kSensFieldNumber;
const int LineSection::kRoutesFieldNumber;
const int LineSection::kViaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LineSection::LineSection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:chaos.LineSection)
}

void LineSection::InitAsDefaultInstance() {
  line_ = const_cast< ::chaos::PtObject*>(&::chaos::PtObject::default_instance());
  start_point_ = const_cast< ::chaos::PtObject*>(&::chaos::PtObject::default_instance());
  end_point_ = const_cast< ::chaos::PtObject*>(&::chaos::PtObject::default_instance());
}

LineSection::LineSection(const LineSection& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:chaos.LineSection)
}

void LineSection::SharedCtor() {
  _cached_size_ = 0;
  line_ = NULL;
  start_point_ = NULL;
  end_point_ = NULL;
  sens_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LineSection::~LineSection() {
  // @@protoc_insertion_point(destructor:chaos.LineSection)
  SharedDtor();
}

void LineSection::SharedDtor() {
  if (this != default_instance_) {
    delete line_;
    delete start_point_;
    delete end_point_;
  }
}

void LineSection::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LineSection::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LineSection_descriptor_;
}

const LineSection& LineSection::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_chaos_2eproto();
  return *default_instance_;
}

LineSection* LineSection::default_instance_ = NULL;

LineSection* LineSection::New(::google::protobuf::Arena* arena) const {
  LineSection* n = new LineSection;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LineSection::Clear() {
// @@protoc_insertion_point(message_clear_start:chaos.LineSection)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_line()) {
      if (line_ != NULL) line_->::chaos::PtObject::Clear();
    }
    if (has_start_point()) {
      if (start_point_ != NULL) start_point_->::chaos::PtObject::Clear();
    }
    if (has_end_point()) {
      if (end_point_ != NULL) end_point_->::chaos::PtObject::Clear();
    }
    sens_ = 0;
  }
  routes_.Clear();
  via_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LineSection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chaos.LineSection)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .chaos.PtObject line = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_line()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_start_point;
        break;
      }

      // required .chaos.PtObject start_point = 2;
      case 2: {
        if (tag == 18) {
         parse_start_point:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_start_point()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_end_point;
        break;
      }

      // required .chaos.PtObject end_point = 3;
      case 3: {
        if (tag == 26) {
         parse_end_point:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_end_point()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_sens;
        break;
      }

      // optional int32 sens = 4;
      case 4: {
        if (tag == 32) {
         parse_sens:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sens_)));
          set_has_sens();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_routes;
        break;
      }

      // repeated .chaos.PtObject routes = 5;
      case 5: {
        if (tag == 42) {
         parse_routes:
          DO_(input->IncrementRecursionDepth());
         parse_loop_routes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_routes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_routes;
        if (input->ExpectTag(50)) goto parse_loop_via;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .chaos.PtObject via = 6;
      case 6: {
        if (tag == 50) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_via:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_via()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_via;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chaos.LineSection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chaos.LineSection)
  return false;
#undef DO_
}

void LineSection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chaos.LineSection)
  // required .chaos.PtObject line = 1;
  if (has_line()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->line_, output);
  }

  // required .chaos.PtObject start_point = 2;
  if (has_start_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->start_point_, output);
  }

  // required .chaos.PtObject end_point = 3;
  if (has_end_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->end_point_, output);
  }

  // optional int32 sens = 4;
  if (has_sens()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->sens(), output);
  }

  // repeated .chaos.PtObject routes = 5;
  for (unsigned int i = 0, n = this->routes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->routes(i), output);
  }

  // repeated .chaos.PtObject via = 6;
  for (unsigned int i = 0, n = this->via_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->via(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chaos.LineSection)
}

::google::protobuf::uint8* LineSection::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:chaos.LineSection)
  // required .chaos.PtObject line = 1;
  if (has_line()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->line_, false, target);
  }

  // required .chaos.PtObject start_point = 2;
  if (has_start_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->start_point_, false, target);
  }

  // required .chaos.PtObject end_point = 3;
  if (has_end_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->end_point_, false, target);
  }

  // optional int32 sens = 4;
  if (has_sens()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->sens(), target);
  }

  // repeated .chaos.PtObject routes = 5;
  for (unsigned int i = 0, n = this->routes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->routes(i), false, target);
  }

  // repeated .chaos.PtObject via = 6;
  for (unsigned int i = 0, n = this->via_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->via(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chaos.LineSection)
  return target;
}

int LineSection::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:chaos.LineSection)
  int total_size = 0;

  if (has_line()) {
    // required .chaos.PtObject line = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->line_);
  }

  if (has_start_point()) {
    // required .chaos.PtObject start_point = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->start_point_);
  }

  if (has_end_point()) {
    // required .chaos.PtObject end_point = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->end_point_);
  }

  return total_size;
}
int LineSection::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:chaos.LineSection)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .chaos.PtObject line = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->line_);

    // required .chaos.PtObject start_point = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->start_point_);

    // required .chaos.PtObject end_point = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->end_point_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional int32 sens = 4;
  if (has_sens()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sens());
  }

  // repeated .chaos.PtObject routes = 5;
  total_size += 1 * this->routes_size();
  for (int i = 0; i < this->routes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->routes(i));
  }

  // repeated .chaos.PtObject via = 6;
  total_size += 1 * this->via_size();
  for (int i = 0; i < this->via_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->via(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LineSection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chaos.LineSection)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LineSection* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LineSection>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chaos.LineSection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chaos.LineSection)
    MergeFrom(*source);
  }
}

void LineSection::MergeFrom(const LineSection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chaos.LineSection)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  routes_.MergeFrom(from.routes_);
  via_.MergeFrom(from.via_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_line()) {
      mutable_line()->::chaos::PtObject::MergeFrom(from.line());
    }
    if (from.has_start_point()) {
      mutable_start_point()->::chaos::PtObject::MergeFrom(from.start_point());
    }
    if (from.has_end_point()) {
      mutable_end_point()->::chaos::PtObject::MergeFrom(from.end_point());
    }
    if (from.has_sens()) {
      set_sens(from.sens());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LineSection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chaos.LineSection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LineSection::CopyFrom(const LineSection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chaos.LineSection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LineSection::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_line()) {
    if (!this->line_->IsInitialized()) return false;
  }
  if (has_start_point()) {
    if (!this->start_point_->IsInitialized()) return false;
  }
  if (has_end_point()) {
    if (!this->end_point_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->routes())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->via())) return false;
  return true;
}

void LineSection::Swap(LineSection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LineSection::InternalSwap(LineSection* other) {
  std::swap(line_, other->line_);
  std::swap(start_point_, other->start_point_);
  std::swap(end_point_, other->end_point_);
  std::swap(sens_, other->sens_);
  routes_.UnsafeArenaSwap(&other->routes_);
  via_.UnsafeArenaSwap(&other->via_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LineSection::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LineSection_descriptor_;
  metadata.reflection = LineSection_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LineSection

// required .chaos.PtObject line = 1;
bool LineSection::has_line() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LineSection::set_has_line() {
  _has_bits_[0] |= 0x00000001u;
}
void LineSection::clear_has_line() {
  _has_bits_[0] &= ~0x00000001u;
}
void LineSection::clear_line() {
  if (line_ != NULL) line_->::chaos::PtObject::Clear();
  clear_has_line();
}
const ::chaos::PtObject& LineSection::line() const {
  // @@protoc_insertion_point(field_get:chaos.LineSection.line)
  return line_ != NULL ? *line_ : *default_instance_->line_;
}
::chaos::PtObject* LineSection::mutable_line() {
  set_has_line();
  if (line_ == NULL) {
    line_ = new ::chaos::PtObject;
  }
  // @@protoc_insertion_point(field_mutable:chaos.LineSection.line)
  return line_;
}
::chaos::PtObject* LineSection::release_line() {
  // @@protoc_insertion_point(field_release:chaos.LineSection.line)
  clear_has_line();
  ::chaos::PtObject* temp = line_;
  line_ = NULL;
  return temp;
}
void LineSection::set_allocated_line(::chaos::PtObject* line) {
  delete line_;
  line_ = line;
  if (line) {
    set_has_line();
  } else {
    clear_has_line();
  }
  // @@protoc_insertion_point(field_set_allocated:chaos.LineSection.line)
}

// required .chaos.PtObject start_point = 2;
bool LineSection::has_start_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LineSection::set_has_start_point() {
  _has_bits_[0] |= 0x00000002u;
}
void LineSection::clear_has_start_point() {
  _has_bits_[0] &= ~0x00000002u;
}
void LineSection::clear_start_point() {
  if (start_point_ != NULL) start_point_->::chaos::PtObject::Clear();
  clear_has_start_point();
}
const ::chaos::PtObject& LineSection::start_point() const {
  // @@protoc_insertion_point(field_get:chaos.LineSection.start_point)
  return start_point_ != NULL ? *start_point_ : *default_instance_->start_point_;
}
::chaos::PtObject* LineSection::mutable_start_point() {
  set_has_start_point();
  if (start_point_ == NULL) {
    start_point_ = new ::chaos::PtObject;
  }
  // @@protoc_insertion_point(field_mutable:chaos.LineSection.start_point)
  return start_point_;
}
::chaos::PtObject* LineSection::release_start_point() {
  // @@protoc_insertion_point(field_release:chaos.LineSection.start_point)
  clear_has_start_point();
  ::chaos::PtObject* temp = start_point_;
  start_point_ = NULL;
  return temp;
}
void LineSection::set_allocated_start_point(::chaos::PtObject* start_point) {
  delete start_point_;
  start_point_ = start_point;
  if (start_point) {
    set_has_start_point();
  } else {
    clear_has_start_point();
  }
  // @@protoc_insertion_point(field_set_allocated:chaos.LineSection.start_point)
}

// required .chaos.PtObject end_point = 3;
bool LineSection::has_end_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LineSection::set_has_end_point() {
  _has_bits_[0] |= 0x00000004u;
}
void LineSection::clear_has_end_point() {
  _has_bits_[0] &= ~0x00000004u;
}
void LineSection::clear_end_point() {
  if (end_point_ != NULL) end_point_->::chaos::PtObject::Clear();
  clear_has_end_point();
}
const ::chaos::PtObject& LineSection::end_point() const {
  // @@protoc_insertion_point(field_get:chaos.LineSection.end_point)
  return end_point_ != NULL ? *end_point_ : *default_instance_->end_point_;
}
::chaos::PtObject* LineSection::mutable_end_point() {
  set_has_end_point();
  if (end_point_ == NULL) {
    end_point_ = new ::chaos::PtObject;
  }
  // @@protoc_insertion_point(field_mutable:chaos.LineSection.end_point)
  return end_point_;
}
::chaos::PtObject* LineSection::release_end_point() {
  // @@protoc_insertion_point(field_release:chaos.LineSection.end_point)
  clear_has_end_point();
  ::chaos::PtObject* temp = end_point_;
  end_point_ = NULL;
  return temp;
}
void LineSection::set_allocated_end_point(::chaos::PtObject* end_point) {
  delete end_point_;
  end_point_ = end_point;
  if (end_point) {
    set_has_end_point();
  } else {
    clear_has_end_point();
  }
  // @@protoc_insertion_point(field_set_allocated:chaos.LineSection.end_point)
}

// optional int32 sens = 4;
bool LineSection::has_sens() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void LineSection::set_has_sens() {
  _has_bits_[0] |= 0x00000008u;
}
void LineSection::clear_has_sens() {
  _has_bits_[0] &= ~0x00000008u;
}
void LineSection::clear_sens() {
  sens_ = 0;
  clear_has_sens();
}
 ::google::protobuf::int32 LineSection::sens() const {
  // @@protoc_insertion_point(field_get:chaos.LineSection.sens)
  return sens_;
}
 void LineSection::set_sens(::google::protobuf::int32 value) {
  set_has_sens();
  sens_ = value;
  // @@protoc_insertion_point(field_set:chaos.LineSection.sens)
}

// repeated .chaos.PtObject routes = 5;
int LineSection::routes_size() const {
  return routes_.size();
}
void LineSection::clear_routes() {
  routes_.Clear();
}
const ::chaos::PtObject& LineSection::routes(int index) const {
  // @@protoc_insertion_point(field_get:chaos.LineSection.routes)
  return routes_.Get(index);
}
::chaos::PtObject* LineSection::mutable_routes(int index) {
  // @@protoc_insertion_point(field_mutable:chaos.LineSection.routes)
  return routes_.Mutable(index);
}
::chaos::PtObject* LineSection::add_routes() {
  // @@protoc_insertion_point(field_add:chaos.LineSection.routes)
  return routes_.Add();
}
::google::protobuf::RepeatedPtrField< ::chaos::PtObject >*
LineSection::mutable_routes() {
  // @@protoc_insertion_point(field_mutable_list:chaos.LineSection.routes)
  return &routes_;
}
const ::google::protobuf::RepeatedPtrField< ::chaos::PtObject >&
LineSection::routes() const {
  // @@protoc_insertion_point(field_list:chaos.LineSection.routes)
  return routes_;
}

// repeated .chaos.PtObject via = 6;
int LineSection::via_size() const {
  return via_.size();
}
void LineSection::clear_via() {
  via_.Clear();
}
const ::chaos::PtObject& LineSection::via(int index) const {
  // @@protoc_insertion_point(field_get:chaos.LineSection.via)
  return via_.Get(index);
}
::chaos::PtObject* LineSection::mutable_via(int index) {
  // @@protoc_insertion_point(field_mutable:chaos.LineSection.via)
  return via_.Mutable(index);
}
::chaos::PtObject* LineSection::add_via() {
  // @@protoc_insertion_point(field_add:chaos.LineSection.via)
  return via_.Add();
}
::google::protobuf::RepeatedPtrField< ::chaos::PtObject >*
LineSection::mutable_via() {
  // @@protoc_insertion_point(field_mutable_list:chaos.LineSection.via)
  return &via_;
}
const ::google::protobuf::RepeatedPtrField< ::chaos::PtObject >&
LineSection::via() const {
  // @@protoc_insertion_point(field_list:chaos.LineSection.via)
  return via_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* PtObject_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PtObject_Type_descriptor_;
}
bool PtObject_Type_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PtObject_Type PtObject::network;
const PtObject_Type PtObject::stop_area;
const PtObject_Type PtObject::line;
const PtObject_Type PtObject::line_section;
const PtObject_Type PtObject::route;
const PtObject_Type PtObject::unkown_type;
const PtObject_Type PtObject::stop_point;
const PtObject_Type PtObject::trip;
const PtObject_Type PtObject::Type_MIN;
const PtObject_Type PtObject::Type_MAX;
const int PtObject::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PtObject::kCreatedAtFieldNumber;
const int PtObject::kUpdatedAtFieldNumber;
const int PtObject::kPtObjectTypeFieldNumber;
const int PtObject::kUriFieldNumber;
const int PtObject::kPtLineSectionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PtObject::PtObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:chaos.PtObject)
}

void PtObject::InitAsDefaultInstance() {
  pt_line_section_ = const_cast< ::chaos::LineSection*>(&::chaos::LineSection::default_instance());
}

PtObject::PtObject(const PtObject& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:chaos.PtObject)
}

void PtObject::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  created_at_ = GOOGLE_ULONGLONG(0);
  updated_at_ = GOOGLE_ULONGLONG(0);
  pt_object_type_ = 1;
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pt_line_section_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PtObject::~PtObject() {
  // @@protoc_insertion_point(destructor:chaos.PtObject)
  SharedDtor();
}

void PtObject::SharedDtor() {
  uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete pt_line_section_;
  }
}

void PtObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PtObject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PtObject_descriptor_;
}

const PtObject& PtObject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_chaos_2eproto();
  return *default_instance_;
}

PtObject* PtObject::default_instance_ = NULL;

PtObject* PtObject::New(::google::protobuf::Arena* arena) const {
  PtObject* n = new PtObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PtObject::Clear() {
// @@protoc_insertion_point(message_clear_start:chaos.PtObject)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PtObject, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PtObject*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(created_at_, updated_at_);
    pt_object_type_ = 1;
    if (has_uri()) {
      uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_pt_line_section()) {
      if (pt_line_section_ != NULL) pt_line_section_->::chaos::LineSection::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PtObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chaos.PtObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 created_at = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &created_at_)));
          set_has_created_at();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_updated_at;
        break;
      }

      // optional uint64 updated_at = 2;
      case 2: {
        if (tag == 16) {
         parse_updated_at:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &updated_at_)));
          set_has_updated_at();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_pt_object_type;
        break;
      }

      // required .chaos.PtObject.Type pt_object_type = 3;
      case 3: {
        if (tag == 24) {
         parse_pt_object_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::chaos::PtObject_Type_IsValid(value)) {
            set_pt_object_type(static_cast< ::chaos::PtObject_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_uri;
        break;
      }

      // required string uri = 4;
      case 4: {
        if (tag == 34) {
         parse_uri:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->uri().data(), this->uri().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chaos.PtObject.uri");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_pt_line_section;
        break;
      }

      // optional .chaos.LineSection pt_line_section = 5;
      case 5: {
        if (tag == 42) {
         parse_pt_line_section:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pt_line_section()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chaos.PtObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chaos.PtObject)
  return false;
#undef DO_
}

void PtObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chaos.PtObject)
  // optional uint64 created_at = 1;
  if (has_created_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->created_at(), output);
  }

  // optional uint64 updated_at = 2;
  if (has_updated_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->updated_at(), output);
  }

  // required .chaos.PtObject.Type pt_object_type = 3;
  if (has_pt_object_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->pt_object_type(), output);
  }

  // required string uri = 4;
  if (has_uri()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uri().data(), this->uri().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.PtObject.uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->uri(), output);
  }

  // optional .chaos.LineSection pt_line_section = 5;
  if (has_pt_line_section()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->pt_line_section_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chaos.PtObject)
}

::google::protobuf::uint8* PtObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:chaos.PtObject)
  // optional uint64 created_at = 1;
  if (has_created_at()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->created_at(), target);
  }

  // optional uint64 updated_at = 2;
  if (has_updated_at()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->updated_at(), target);
  }

  // required .chaos.PtObject.Type pt_object_type = 3;
  if (has_pt_object_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->pt_object_type(), target);
  }

  // required string uri = 4;
  if (has_uri()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uri().data(), this->uri().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.PtObject.uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->uri(), target);
  }

  // optional .chaos.LineSection pt_line_section = 5;
  if (has_pt_line_section()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->pt_line_section_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chaos.PtObject)
  return target;
}

int PtObject::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:chaos.PtObject)
  int total_size = 0;

  if (has_pt_object_type()) {
    // required .chaos.PtObject.Type pt_object_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->pt_object_type());
  }

  if (has_uri()) {
    // required string uri = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uri());
  }

  return total_size;
}
int PtObject::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:chaos.PtObject)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000c) ^ 0x0000000c) == 0) {  // All required fields are present.
    // required .chaos.PtObject.Type pt_object_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->pt_object_type());

    // required string uri = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uri());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 19u) {
    // optional uint64 created_at = 1;
    if (has_created_at()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->created_at());
    }

    // optional uint64 updated_at = 2;
    if (has_updated_at()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->updated_at());
    }

    // optional .chaos.LineSection pt_line_section = 5;
    if (has_pt_line_section()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pt_line_section_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PtObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chaos.PtObject)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PtObject* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PtObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chaos.PtObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chaos.PtObject)
    MergeFrom(*source);
  }
}

void PtObject::MergeFrom(const PtObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chaos.PtObject)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_created_at()) {
      set_created_at(from.created_at());
    }
    if (from.has_updated_at()) {
      set_updated_at(from.updated_at());
    }
    if (from.has_pt_object_type()) {
      set_pt_object_type(from.pt_object_type());
    }
    if (from.has_uri()) {
      set_has_uri();
      uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
    }
    if (from.has_pt_line_section()) {
      mutable_pt_line_section()->::chaos::LineSection::MergeFrom(from.pt_line_section());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PtObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chaos.PtObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PtObject::CopyFrom(const PtObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chaos.PtObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PtObject::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;

  if (has_pt_line_section()) {
    if (!this->pt_line_section_->IsInitialized()) return false;
  }
  return true;
}

void PtObject::Swap(PtObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PtObject::InternalSwap(PtObject* other) {
  std::swap(created_at_, other->created_at_);
  std::swap(updated_at_, other->updated_at_);
  std::swap(pt_object_type_, other->pt_object_type_);
  uri_.Swap(&other->uri_);
  std::swap(pt_line_section_, other->pt_line_section_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PtObject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PtObject_descriptor_;
  metadata.reflection = PtObject_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PtObject

// optional uint64 created_at = 1;
bool PtObject::has_created_at() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PtObject::set_has_created_at() {
  _has_bits_[0] |= 0x00000001u;
}
void PtObject::clear_has_created_at() {
  _has_bits_[0] &= ~0x00000001u;
}
void PtObject::clear_created_at() {
  created_at_ = GOOGLE_ULONGLONG(0);
  clear_has_created_at();
}
 ::google::protobuf::uint64 PtObject::created_at() const {
  // @@protoc_insertion_point(field_get:chaos.PtObject.created_at)
  return created_at_;
}
 void PtObject::set_created_at(::google::protobuf::uint64 value) {
  set_has_created_at();
  created_at_ = value;
  // @@protoc_insertion_point(field_set:chaos.PtObject.created_at)
}

// optional uint64 updated_at = 2;
bool PtObject::has_updated_at() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PtObject::set_has_updated_at() {
  _has_bits_[0] |= 0x00000002u;
}
void PtObject::clear_has_updated_at() {
  _has_bits_[0] &= ~0x00000002u;
}
void PtObject::clear_updated_at() {
  updated_at_ = GOOGLE_ULONGLONG(0);
  clear_has_updated_at();
}
 ::google::protobuf::uint64 PtObject::updated_at() const {
  // @@protoc_insertion_point(field_get:chaos.PtObject.updated_at)
  return updated_at_;
}
 void PtObject::set_updated_at(::google::protobuf::uint64 value) {
  set_has_updated_at();
  updated_at_ = value;
  // @@protoc_insertion_point(field_set:chaos.PtObject.updated_at)
}

// required .chaos.PtObject.Type pt_object_type = 3;
bool PtObject::has_pt_object_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PtObject::set_has_pt_object_type() {
  _has_bits_[0] |= 0x00000004u;
}
void PtObject::clear_has_pt_object_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void PtObject::clear_pt_object_type() {
  pt_object_type_ = 1;
  clear_has_pt_object_type();
}
 ::chaos::PtObject_Type PtObject::pt_object_type() const {
  // @@protoc_insertion_point(field_get:chaos.PtObject.pt_object_type)
  return static_cast< ::chaos::PtObject_Type >(pt_object_type_);
}
 void PtObject::set_pt_object_type(::chaos::PtObject_Type value) {
  assert(::chaos::PtObject_Type_IsValid(value));
  set_has_pt_object_type();
  pt_object_type_ = value;
  // @@protoc_insertion_point(field_set:chaos.PtObject.pt_object_type)
}

// required string uri = 4;
bool PtObject::has_uri() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PtObject::set_has_uri() {
  _has_bits_[0] |= 0x00000008u;
}
void PtObject::clear_has_uri() {
  _has_bits_[0] &= ~0x00000008u;
}
void PtObject::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uri();
}
 const ::std::string& PtObject::uri() const {
  // @@protoc_insertion_point(field_get:chaos.PtObject.uri)
  return uri_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PtObject::set_uri(const ::std::string& value) {
  set_has_uri();
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chaos.PtObject.uri)
}
 void PtObject::set_uri(const char* value) {
  set_has_uri();
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chaos.PtObject.uri)
}
 void PtObject::set_uri(const char* value, size_t size) {
  set_has_uri();
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chaos.PtObject.uri)
}
 ::std::string* PtObject::mutable_uri() {
  set_has_uri();
  // @@protoc_insertion_point(field_mutable:chaos.PtObject.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PtObject::release_uri() {
  // @@protoc_insertion_point(field_release:chaos.PtObject.uri)
  clear_has_uri();
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PtObject::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    set_has_uri();
  } else {
    clear_has_uri();
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:chaos.PtObject.uri)
}

// optional .chaos.LineSection pt_line_section = 5;
bool PtObject::has_pt_line_section() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PtObject::set_has_pt_line_section() {
  _has_bits_[0] |= 0x00000010u;
}
void PtObject::clear_has_pt_line_section() {
  _has_bits_[0] &= ~0x00000010u;
}
void PtObject::clear_pt_line_section() {
  if (pt_line_section_ != NULL) pt_line_section_->::chaos::LineSection::Clear();
  clear_has_pt_line_section();
}
const ::chaos::LineSection& PtObject::pt_line_section() const {
  // @@protoc_insertion_point(field_get:chaos.PtObject.pt_line_section)
  return pt_line_section_ != NULL ? *pt_line_section_ : *default_instance_->pt_line_section_;
}
::chaos::LineSection* PtObject::mutable_pt_line_section() {
  set_has_pt_line_section();
  if (pt_line_section_ == NULL) {
    pt_line_section_ = new ::chaos::LineSection;
  }
  // @@protoc_insertion_point(field_mutable:chaos.PtObject.pt_line_section)
  return pt_line_section_;
}
::chaos::LineSection* PtObject::release_pt_line_section() {
  // @@protoc_insertion_point(field_release:chaos.PtObject.pt_line_section)
  clear_has_pt_line_section();
  ::chaos::LineSection* temp = pt_line_section_;
  pt_line_section_ = NULL;
  return temp;
}
void PtObject::set_allocated_pt_line_section(::chaos::LineSection* pt_line_section) {
  delete pt_line_section_;
  pt_line_section_ = pt_line_section;
  if (pt_line_section) {
    set_has_pt_line_section();
  } else {
    clear_has_pt_line_section();
  }
  // @@protoc_insertion_point(field_set_allocated:chaos.PtObject.pt_line_section)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Severity::kIdFieldNumber;
const int Severity::kWordingFieldNumber;
const int Severity::kCreatedAtFieldNumber;
const int Severity::kUpdatedAtFieldNumber;
const int Severity::kColorFieldNumber;
const int Severity::kPriorityFieldNumber;
const int Severity::kEffectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Severity::Severity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:chaos.Severity)
}

void Severity::InitAsDefaultInstance() {
}

Severity::Severity(const Severity& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:chaos.Severity)
}

void Severity::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wording_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  created_at_ = GOOGLE_ULONGLONG(0);
  updated_at_ = GOOGLE_ULONGLONG(0);
  color_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  priority_ = 0;
  effect_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Severity::~Severity() {
  // @@protoc_insertion_point(destructor:chaos.Severity)
  SharedDtor();
}

void Severity::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wording_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  color_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Severity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Severity::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Severity_descriptor_;
}

const Severity& Severity::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_chaos_2eproto();
  return *default_instance_;
}

Severity* Severity::default_instance_ = NULL;

Severity* Severity::New(::google::protobuf::Arena* arena) const {
  Severity* n = new Severity;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Severity::Clear() {
// @@protoc_insertion_point(message_clear_start:chaos.Severity)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Severity, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Severity*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(created_at_, updated_at_);
    if (has_id()) {
      id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_wording()) {
      wording_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_color()) {
      color_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    priority_ = 0;
    effect_ = 1;
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Severity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chaos.Severity)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chaos.Severity.id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_wording;
        break;
      }

      // optional string wording = 2;
      case 2: {
        if (tag == 18) {
         parse_wording:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_wording()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->wording().data(), this->wording().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chaos.Severity.wording");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_created_at;
        break;
      }

      // optional uint64 created_at = 3;
      case 3: {
        if (tag == 24) {
         parse_created_at:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &created_at_)));
          set_has_created_at();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_updated_at;
        break;
      }

      // optional uint64 updated_at = 4;
      case 4: {
        if (tag == 32) {
         parse_updated_at:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &updated_at_)));
          set_has_updated_at();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_color;
        break;
      }

      // optional string color = 5;
      case 5: {
        if (tag == 42) {
         parse_color:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_color()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->color().data(), this->color().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chaos.Severity.color");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_priority;
        break;
      }

      // optional int32 priority = 6;
      case 6: {
        if (tag == 48) {
         parse_priority:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &priority_)));
          set_has_priority();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_effect;
        break;
      }

      // optional .transit_realtime.Alert.Effect effect = 7;
      case 7: {
        if (tag == 56) {
         parse_effect:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::transit_realtime::Alert_Effect_IsValid(value)) {
            set_effect(static_cast< ::transit_realtime::Alert_Effect >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chaos.Severity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chaos.Severity)
  return false;
#undef DO_
}

void Severity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chaos.Severity)
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Severity.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional string wording = 2;
  if (has_wording()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->wording().data(), this->wording().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Severity.wording");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->wording(), output);
  }

  // optional uint64 created_at = 3;
  if (has_created_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->created_at(), output);
  }

  // optional uint64 updated_at = 4;
  if (has_updated_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->updated_at(), output);
  }

  // optional string color = 5;
  if (has_color()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->color().data(), this->color().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Severity.color");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->color(), output);
  }

  // optional int32 priority = 6;
  if (has_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->priority(), output);
  }

  // optional .transit_realtime.Alert.Effect effect = 7;
  if (has_effect()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->effect(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chaos.Severity)
}

::google::protobuf::uint8* Severity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:chaos.Severity)
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Severity.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string wording = 2;
  if (has_wording()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->wording().data(), this->wording().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Severity.wording");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->wording(), target);
  }

  // optional uint64 created_at = 3;
  if (has_created_at()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->created_at(), target);
  }

  // optional uint64 updated_at = 4;
  if (has_updated_at()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->updated_at(), target);
  }

  // optional string color = 5;
  if (has_color()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->color().data(), this->color().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Severity.color");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->color(), target);
  }

  // optional int32 priority = 6;
  if (has_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->priority(), target);
  }

  // optional .transit_realtime.Alert.Effect effect = 7;
  if (has_effect()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->effect(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chaos.Severity)
  return target;
}

int Severity::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:chaos.Severity)
  int total_size = 0;

  // required string id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }
  if (_has_bits_[1 / 32] & 126u) {
    // optional string wording = 2;
    if (has_wording()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->wording());
    }

    // optional uint64 created_at = 3;
    if (has_created_at()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->created_at());
    }

    // optional uint64 updated_at = 4;
    if (has_updated_at()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->updated_at());
    }

    // optional string color = 5;
    if (has_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->color());
    }

    // optional int32 priority = 6;
    if (has_priority()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->priority());
    }

    // optional .transit_realtime.Alert.Effect effect = 7;
    if (has_effect()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->effect());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Severity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chaos.Severity)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Severity* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Severity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chaos.Severity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chaos.Severity)
    MergeFrom(*source);
  }
}

void Severity::MergeFrom(const Severity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chaos.Severity)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (from.has_wording()) {
      set_has_wording();
      wording_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wording_);
    }
    if (from.has_created_at()) {
      set_created_at(from.created_at());
    }
    if (from.has_updated_at()) {
      set_updated_at(from.updated_at());
    }
    if (from.has_color()) {
      set_has_color();
      color_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.color_);
    }
    if (from.has_priority()) {
      set_priority(from.priority());
    }
    if (from.has_effect()) {
      set_effect(from.effect());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Severity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chaos.Severity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Severity::CopyFrom(const Severity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chaos.Severity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Severity::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Severity::Swap(Severity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Severity::InternalSwap(Severity* other) {
  id_.Swap(&other->id_);
  wording_.Swap(&other->wording_);
  std::swap(created_at_, other->created_at_);
  std::swap(updated_at_, other->updated_at_);
  color_.Swap(&other->color_);
  std::swap(priority_, other->priority_);
  std::swap(effect_, other->effect_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Severity::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Severity_descriptor_;
  metadata.reflection = Severity_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Severity

// required string id = 1;
bool Severity::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Severity::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void Severity::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void Severity::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
 const ::std::string& Severity::id() const {
  // @@protoc_insertion_point(field_get:chaos.Severity.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Severity::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chaos.Severity.id)
}
 void Severity::set_id(const char* value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chaos.Severity.id)
}
 void Severity::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chaos.Severity.id)
}
 ::std::string* Severity::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:chaos.Severity.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Severity::release_id() {
  // @@protoc_insertion_point(field_release:chaos.Severity.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Severity::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:chaos.Severity.id)
}

// optional string wording = 2;
bool Severity::has_wording() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Severity::set_has_wording() {
  _has_bits_[0] |= 0x00000002u;
}
void Severity::clear_has_wording() {
  _has_bits_[0] &= ~0x00000002u;
}
void Severity::clear_wording() {
  wording_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_wording();
}
 const ::std::string& Severity::wording() const {
  // @@protoc_insertion_point(field_get:chaos.Severity.wording)
  return wording_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Severity::set_wording(const ::std::string& value) {
  set_has_wording();
  wording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chaos.Severity.wording)
}
 void Severity::set_wording(const char* value) {
  set_has_wording();
  wording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chaos.Severity.wording)
}
 void Severity::set_wording(const char* value, size_t size) {
  set_has_wording();
  wording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chaos.Severity.wording)
}
 ::std::string* Severity::mutable_wording() {
  set_has_wording();
  // @@protoc_insertion_point(field_mutable:chaos.Severity.wording)
  return wording_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Severity::release_wording() {
  // @@protoc_insertion_point(field_release:chaos.Severity.wording)
  clear_has_wording();
  return wording_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Severity::set_allocated_wording(::std::string* wording) {
  if (wording != NULL) {
    set_has_wording();
  } else {
    clear_has_wording();
  }
  wording_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wording);
  // @@protoc_insertion_point(field_set_allocated:chaos.Severity.wording)
}

// optional uint64 created_at = 3;
bool Severity::has_created_at() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Severity::set_has_created_at() {
  _has_bits_[0] |= 0x00000004u;
}
void Severity::clear_has_created_at() {
  _has_bits_[0] &= ~0x00000004u;
}
void Severity::clear_created_at() {
  created_at_ = GOOGLE_ULONGLONG(0);
  clear_has_created_at();
}
 ::google::protobuf::uint64 Severity::created_at() const {
  // @@protoc_insertion_point(field_get:chaos.Severity.created_at)
  return created_at_;
}
 void Severity::set_created_at(::google::protobuf::uint64 value) {
  set_has_created_at();
  created_at_ = value;
  // @@protoc_insertion_point(field_set:chaos.Severity.created_at)
}

// optional uint64 updated_at = 4;
bool Severity::has_updated_at() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Severity::set_has_updated_at() {
  _has_bits_[0] |= 0x00000008u;
}
void Severity::clear_has_updated_at() {
  _has_bits_[0] &= ~0x00000008u;
}
void Severity::clear_updated_at() {
  updated_at_ = GOOGLE_ULONGLONG(0);
  clear_has_updated_at();
}
 ::google::protobuf::uint64 Severity::updated_at() const {
  // @@protoc_insertion_point(field_get:chaos.Severity.updated_at)
  return updated_at_;
}
 void Severity::set_updated_at(::google::protobuf::uint64 value) {
  set_has_updated_at();
  updated_at_ = value;
  // @@protoc_insertion_point(field_set:chaos.Severity.updated_at)
}

// optional string color = 5;
bool Severity::has_color() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Severity::set_has_color() {
  _has_bits_[0] |= 0x00000010u;
}
void Severity::clear_has_color() {
  _has_bits_[0] &= ~0x00000010u;
}
void Severity::clear_color() {
  color_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_color();
}
 const ::std::string& Severity::color() const {
  // @@protoc_insertion_point(field_get:chaos.Severity.color)
  return color_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Severity::set_color(const ::std::string& value) {
  set_has_color();
  color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chaos.Severity.color)
}
 void Severity::set_color(const char* value) {
  set_has_color();
  color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chaos.Severity.color)
}
 void Severity::set_color(const char* value, size_t size) {
  set_has_color();
  color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chaos.Severity.color)
}
 ::std::string* Severity::mutable_color() {
  set_has_color();
  // @@protoc_insertion_point(field_mutable:chaos.Severity.color)
  return color_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Severity::release_color() {
  // @@protoc_insertion_point(field_release:chaos.Severity.color)
  clear_has_color();
  return color_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Severity::set_allocated_color(::std::string* color) {
  if (color != NULL) {
    set_has_color();
  } else {
    clear_has_color();
  }
  color_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), color);
  // @@protoc_insertion_point(field_set_allocated:chaos.Severity.color)
}

// optional int32 priority = 6;
bool Severity::has_priority() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Severity::set_has_priority() {
  _has_bits_[0] |= 0x00000020u;
}
void Severity::clear_has_priority() {
  _has_bits_[0] &= ~0x00000020u;
}
void Severity::clear_priority() {
  priority_ = 0;
  clear_has_priority();
}
 ::google::protobuf::int32 Severity::priority() const {
  // @@protoc_insertion_point(field_get:chaos.Severity.priority)
  return priority_;
}
 void Severity::set_priority(::google::protobuf::int32 value) {
  set_has_priority();
  priority_ = value;
  // @@protoc_insertion_point(field_set:chaos.Severity.priority)
}

// optional .transit_realtime.Alert.Effect effect = 7;
bool Severity::has_effect() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Severity::set_has_effect() {
  _has_bits_[0] |= 0x00000040u;
}
void Severity::clear_has_effect() {
  _has_bits_[0] &= ~0x00000040u;
}
void Severity::clear_effect() {
  effect_ = 1;
  clear_has_effect();
}
 ::transit_realtime::Alert_Effect Severity::effect() const {
  // @@protoc_insertion_point(field_get:chaos.Severity.effect)
  return static_cast< ::transit_realtime::Alert_Effect >(effect_);
}
 void Severity::set_effect(::transit_realtime::Alert_Effect value) {
  assert(::transit_realtime::Alert_Effect_IsValid(value));
  set_has_effect();
  effect_ = value;
  // @@protoc_insertion_point(field_set:chaos.Severity.effect)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tag::kIdFieldNumber;
const int Tag::kNameFieldNumber;
const int Tag::kCreatedAtFieldNumber;
const int Tag::kUpdatedAtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tag::Tag()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:chaos.Tag)
}

void Tag::InitAsDefaultInstance() {
}

Tag::Tag(const Tag& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:chaos.Tag)
}

void Tag::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  created_at_ = GOOGLE_ULONGLONG(0);
  updated_at_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Tag::~Tag() {
  // @@protoc_insertion_point(destructor:chaos.Tag)
  SharedDtor();
}

void Tag::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Tag::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Tag::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Tag_descriptor_;
}

const Tag& Tag::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_chaos_2eproto();
  return *default_instance_;
}

Tag* Tag::default_instance_ = NULL;

Tag* Tag::New(::google::protobuf::Arena* arena) const {
  Tag* n = new Tag;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Tag::Clear() {
// @@protoc_insertion_point(message_clear_start:chaos.Tag)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Tag, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Tag*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(created_at_, updated_at_);
    if (has_id()) {
      id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Tag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chaos.Tag)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chaos.Tag.id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chaos.Tag.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_created_at;
        break;
      }

      // optional uint64 created_at = 3;
      case 3: {
        if (tag == 24) {
         parse_created_at:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &created_at_)));
          set_has_created_at();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_updated_at;
        break;
      }

      // optional uint64 updated_at = 4;
      case 4: {
        if (tag == 32) {
         parse_updated_at:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &updated_at_)));
          set_has_updated_at();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chaos.Tag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chaos.Tag)
  return false;
#undef DO_
}

void Tag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chaos.Tag)
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Tag.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Tag.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional uint64 created_at = 3;
  if (has_created_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->created_at(), output);
  }

  // optional uint64 updated_at = 4;
  if (has_updated_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->updated_at(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chaos.Tag)
}

::google::protobuf::uint8* Tag::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:chaos.Tag)
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Tag.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Tag.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional uint64 created_at = 3;
  if (has_created_at()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->created_at(), target);
  }

  // optional uint64 updated_at = 4;
  if (has_updated_at()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->updated_at(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chaos.Tag)
  return target;
}

int Tag::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:chaos.Tag)
  int total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  return total_size;
}
int Tag::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:chaos.Tag)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 12u) {
    // optional uint64 created_at = 3;
    if (has_created_at()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->created_at());
    }

    // optional uint64 updated_at = 4;
    if (has_updated_at()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->updated_at());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Tag::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chaos.Tag)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Tag* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Tag>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chaos.Tag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chaos.Tag)
    MergeFrom(*source);
  }
}

void Tag::MergeFrom(const Tag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chaos.Tag)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_created_at()) {
      set_created_at(from.created_at());
    }
    if (from.has_updated_at()) {
      set_updated_at(from.updated_at());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Tag::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chaos.Tag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tag::CopyFrom(const Tag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chaos.Tag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tag::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Tag::Swap(Tag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tag::InternalSwap(Tag* other) {
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  std::swap(created_at_, other->created_at_);
  std::swap(updated_at_, other->updated_at_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Tag::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Tag_descriptor_;
  metadata.reflection = Tag_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Tag

// required string id = 1;
bool Tag::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Tag::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void Tag::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void Tag::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
 const ::std::string& Tag::id() const {
  // @@protoc_insertion_point(field_get:chaos.Tag.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Tag::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chaos.Tag.id)
}
 void Tag::set_id(const char* value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chaos.Tag.id)
}
 void Tag::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chaos.Tag.id)
}
 ::std::string* Tag::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:chaos.Tag.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Tag::release_id() {
  // @@protoc_insertion_point(field_release:chaos.Tag.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Tag::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:chaos.Tag.id)
}

// required string name = 2;
bool Tag::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Tag::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void Tag::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void Tag::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& Tag::name() const {
  // @@protoc_insertion_point(field_get:chaos.Tag.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Tag::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chaos.Tag.name)
}
 void Tag::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chaos.Tag.name)
}
 void Tag::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chaos.Tag.name)
}
 ::std::string* Tag::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:chaos.Tag.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Tag::release_name() {
  // @@protoc_insertion_point(field_release:chaos.Tag.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Tag::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:chaos.Tag.name)
}

// optional uint64 created_at = 3;
bool Tag::has_created_at() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Tag::set_has_created_at() {
  _has_bits_[0] |= 0x00000004u;
}
void Tag::clear_has_created_at() {
  _has_bits_[0] &= ~0x00000004u;
}
void Tag::clear_created_at() {
  created_at_ = GOOGLE_ULONGLONG(0);
  clear_has_created_at();
}
 ::google::protobuf::uint64 Tag::created_at() const {
  // @@protoc_insertion_point(field_get:chaos.Tag.created_at)
  return created_at_;
}
 void Tag::set_created_at(::google::protobuf::uint64 value) {
  set_has_created_at();
  created_at_ = value;
  // @@protoc_insertion_point(field_set:chaos.Tag.created_at)
}

// optional uint64 updated_at = 4;
bool Tag::has_updated_at() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Tag::set_has_updated_at() {
  _has_bits_[0] |= 0x00000008u;
}
void Tag::clear_has_updated_at() {
  _has_bits_[0] &= ~0x00000008u;
}
void Tag::clear_updated_at() {
  updated_at_ = GOOGLE_ULONGLONG(0);
  clear_has_updated_at();
}
 ::google::protobuf::uint64 Tag::updated_at() const {
  // @@protoc_insertion_point(field_get:chaos.Tag.updated_at)
  return updated_at_;
}
 void Tag::set_updated_at(::google::protobuf::uint64 value) {
  set_has_updated_at();
  updated_at_ = value;
  // @@protoc_insertion_point(field_set:chaos.Tag.updated_at)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message::kTextFieldNumber;
const int Message::kChannelFieldNumber;
const int Message::kCreatedAtFieldNumber;
const int Message::kUpdatedAtFieldNumber;
const int Message::kMetaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message::Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:chaos.Message)
}

void Message::InitAsDefaultInstance() {
  channel_ = const_cast< ::chaos::Channel*>(&::chaos::Channel::default_instance());
}

Message::Message(const Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:chaos.Message)
}

void Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = NULL;
  created_at_ = GOOGLE_ULONGLONG(0);
  updated_at_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:chaos.Message)
  SharedDtor();
}

void Message::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete channel_;
  }
}

void Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Message_descriptor_;
}

const Message& Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_chaos_2eproto();
  return *default_instance_;
}

Message* Message::default_instance_ = NULL;

Message* Message::New(::google::protobuf::Arena* arena) const {
  Message* n = new Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:chaos.Message)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Message, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Message*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(created_at_, updated_at_);
    if (has_text()) {
      text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_channel()) {
      if (channel_ != NULL) channel_->::chaos::Channel::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  meta_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chaos.Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string text = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chaos.Message.text");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_channel;
        break;
      }

      // required .chaos.Channel channel = 2;
      case 2: {
        if (tag == 18) {
         parse_channel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_channel()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_created_at;
        break;
      }

      // optional uint64 created_at = 3;
      case 3: {
        if (tag == 24) {
         parse_created_at:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &created_at_)));
          set_has_created_at();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_updated_at;
        break;
      }

      // optional uint64 updated_at = 4;
      case 4: {
        if (tag == 32) {
         parse_updated_at:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &updated_at_)));
          set_has_updated_at();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_meta;
        break;
      }

      // repeated .chaos.Meta meta = 5;
      case 5: {
        if (tag == 42) {
         parse_meta:
          DO_(input->IncrementRecursionDepth());
         parse_loop_meta:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_meta()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_meta;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chaos.Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chaos.Message)
  return false;
#undef DO_
}

void Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chaos.Message)
  // required string text = 1;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Message.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  // required .chaos.Channel channel = 2;
  if (has_channel()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->channel_, output);
  }

  // optional uint64 created_at = 3;
  if (has_created_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->created_at(), output);
  }

  // optional uint64 updated_at = 4;
  if (has_updated_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->updated_at(), output);
  }

  // repeated .chaos.Meta meta = 5;
  for (unsigned int i = 0, n = this->meta_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->meta(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chaos.Message)
}

::google::protobuf::uint8* Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:chaos.Message)
  // required string text = 1;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Message.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  // required .chaos.Channel channel = 2;
  if (has_channel()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->channel_, false, target);
  }

  // optional uint64 created_at = 3;
  if (has_created_at()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->created_at(), target);
  }

  // optional uint64 updated_at = 4;
  if (has_updated_at()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->updated_at(), target);
  }

  // repeated .chaos.Meta meta = 5;
  for (unsigned int i = 0, n = this->meta_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->meta(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chaos.Message)
  return target;
}

int Message::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:chaos.Message)
  int total_size = 0;

  if (has_text()) {
    // required string text = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  if (has_channel()) {
    // required .chaos.Channel channel = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->channel_);
  }

  return total_size;
}
int Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:chaos.Message)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string text = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());

    // required .chaos.Channel channel = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->channel_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 12u) {
    // optional uint64 created_at = 3;
    if (has_created_at()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->created_at());
    }

    // optional uint64 updated_at = 4;
    if (has_updated_at()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->updated_at());
    }

  }
  // repeated .chaos.Meta meta = 5;
  total_size += 1 * this->meta_size();
  for (int i = 0; i < this->meta_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->meta(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chaos.Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chaos.Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chaos.Message)
    MergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chaos.Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  meta_.MergeFrom(from.meta_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_text()) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (from.has_channel()) {
      mutable_channel()->::chaos::Channel::MergeFrom(from.channel());
    }
    if (from.has_created_at()) {
      set_created_at(from.created_at());
    }
    if (from.has_updated_at()) {
      set_updated_at(from.updated_at());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chaos.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chaos.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_channel()) {
    if (!this->channel_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->meta())) return false;
  return true;
}

void Message::Swap(Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message::InternalSwap(Message* other) {
  text_.Swap(&other->text_);
  std::swap(channel_, other->channel_);
  std::swap(created_at_, other->created_at_);
  std::swap(updated_at_, other->updated_at_);
  meta_.UnsafeArenaSwap(&other->meta_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Message_descriptor_;
  metadata.reflection = Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Message

// required string text = 1;
bool Message::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Message::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
void Message::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
void Message::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
 const ::std::string& Message::text() const {
  // @@protoc_insertion_point(field_get:chaos.Message.text)
  return text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Message::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chaos.Message.text)
}
 void Message::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chaos.Message.text)
}
 void Message::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chaos.Message.text)
}
 ::std::string* Message::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:chaos.Message.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Message::release_text() {
  // @@protoc_insertion_point(field_release:chaos.Message.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Message::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:chaos.Message.text)
}

// required .chaos.Channel channel = 2;
bool Message::has_channel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Message::set_has_channel() {
  _has_bits_[0] |= 0x00000002u;
}
void Message::clear_has_channel() {
  _has_bits_[0] &= ~0x00000002u;
}
void Message::clear_channel() {
  if (channel_ != NULL) channel_->::chaos::Channel::Clear();
  clear_has_channel();
}
const ::chaos::Channel& Message::channel() const {
  // @@protoc_insertion_point(field_get:chaos.Message.channel)
  return channel_ != NULL ? *channel_ : *default_instance_->channel_;
}
::chaos::Channel* Message::mutable_channel() {
  set_has_channel();
  if (channel_ == NULL) {
    channel_ = new ::chaos::Channel;
  }
  // @@protoc_insertion_point(field_mutable:chaos.Message.channel)
  return channel_;
}
::chaos::Channel* Message::release_channel() {
  // @@protoc_insertion_point(field_release:chaos.Message.channel)
  clear_has_channel();
  ::chaos::Channel* temp = channel_;
  channel_ = NULL;
  return temp;
}
void Message::set_allocated_channel(::chaos::Channel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    set_has_channel();
  } else {
    clear_has_channel();
  }
  // @@protoc_insertion_point(field_set_allocated:chaos.Message.channel)
}

// optional uint64 created_at = 3;
bool Message::has_created_at() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Message::set_has_created_at() {
  _has_bits_[0] |= 0x00000004u;
}
void Message::clear_has_created_at() {
  _has_bits_[0] &= ~0x00000004u;
}
void Message::clear_created_at() {
  created_at_ = GOOGLE_ULONGLONG(0);
  clear_has_created_at();
}
 ::google::protobuf::uint64 Message::created_at() const {
  // @@protoc_insertion_point(field_get:chaos.Message.created_at)
  return created_at_;
}
 void Message::set_created_at(::google::protobuf::uint64 value) {
  set_has_created_at();
  created_at_ = value;
  // @@protoc_insertion_point(field_set:chaos.Message.created_at)
}

// optional uint64 updated_at = 4;
bool Message::has_updated_at() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Message::set_has_updated_at() {
  _has_bits_[0] |= 0x00000008u;
}
void Message::clear_has_updated_at() {
  _has_bits_[0] &= ~0x00000008u;
}
void Message::clear_updated_at() {
  updated_at_ = GOOGLE_ULONGLONG(0);
  clear_has_updated_at();
}
 ::google::protobuf::uint64 Message::updated_at() const {
  // @@protoc_insertion_point(field_get:chaos.Message.updated_at)
  return updated_at_;
}
 void Message::set_updated_at(::google::protobuf::uint64 value) {
  set_has_updated_at();
  updated_at_ = value;
  // @@protoc_insertion_point(field_set:chaos.Message.updated_at)
}

// repeated .chaos.Meta meta = 5;
int Message::meta_size() const {
  return meta_.size();
}
void Message::clear_meta() {
  meta_.Clear();
}
const ::chaos::Meta& Message::meta(int index) const {
  // @@protoc_insertion_point(field_get:chaos.Message.meta)
  return meta_.Get(index);
}
::chaos::Meta* Message::mutable_meta(int index) {
  // @@protoc_insertion_point(field_mutable:chaos.Message.meta)
  return meta_.Mutable(index);
}
::chaos::Meta* Message::add_meta() {
  // @@protoc_insertion_point(field_add:chaos.Message.meta)
  return meta_.Add();
}
::google::protobuf::RepeatedPtrField< ::chaos::Meta >*
Message::mutable_meta() {
  // @@protoc_insertion_point(field_mutable_list:chaos.Message.meta)
  return &meta_;
}
const ::google::protobuf::RepeatedPtrField< ::chaos::Meta >&
Message::meta() const {
  // @@protoc_insertion_point(field_list:chaos.Message.meta)
  return meta_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* Channel_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Channel_Type_descriptor_;
}
bool Channel_Type_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Channel_Type Channel::web;
const Channel_Type Channel::sms;
const Channel_Type Channel::email;
const Channel_Type Channel::mobile;
const Channel_Type Channel::notification;
const Channel_Type Channel::twitter;
const Channel_Type Channel::facebook;
const Channel_Type Channel::unkown_type;
const Channel_Type Channel::title;
const Channel_Type Channel::beacon;
const Channel_Type Channel::Type_MIN;
const Channel_Type Channel::Type_MAX;
const int Channel::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Channel::kIdFieldNumber;
const int Channel::kNameFieldNumber;
const int Channel::kContentTypeFieldNumber;
const int Channel::kMaxSizeFieldNumber;
const int Channel::kCreatedAtFieldNumber;
const int Channel::kUpdatedAtFieldNumber;
const int Channel::kTypesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Channel::Channel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:chaos.Channel)
}

void Channel::InitAsDefaultInstance() {
}

Channel::Channel(const Channel& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:chaos.Channel)
}

void Channel::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  max_size_ = 0u;
  created_at_ = GOOGLE_ULONGLONG(0);
  updated_at_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Channel::~Channel() {
  // @@protoc_insertion_point(destructor:chaos.Channel)
  SharedDtor();
}

void Channel::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Channel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Channel::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Channel_descriptor_;
}

const Channel& Channel::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_chaos_2eproto();
  return *default_instance_;
}

Channel* Channel::default_instance_ = NULL;

Channel* Channel::New(::google::protobuf::Arena* arena) const {
  Channel* n = new Channel;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Channel::Clear() {
// @@protoc_insertion_point(message_clear_start:chaos.Channel)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Channel, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Channel*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(created_at_, updated_at_);
    if (has_id()) {
      id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_content_type()) {
      content_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    max_size_ = 0u;
  }

#undef ZR_HELPER_
#undef ZR_

  types_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Channel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chaos.Channel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chaos.Channel.id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chaos.Channel.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_content_type;
        break;
      }

      // optional string content_type = 3;
      case 3: {
        if (tag == 26) {
         parse_content_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content_type().data(), this->content_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chaos.Channel.content_type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_max_size;
        break;
      }

      // optional uint32 max_size = 4;
      case 4: {
        if (tag == 32) {
         parse_max_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_size_)));
          set_has_max_size();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_created_at;
        break;
      }

      // optional uint64 created_at = 5;
      case 5: {
        if (tag == 40) {
         parse_created_at:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &created_at_)));
          set_has_created_at();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_updated_at;
        break;
      }

      // optional uint64 updated_at = 6;
      case 6: {
        if (tag == 48) {
         parse_updated_at:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &updated_at_)));
          set_has_updated_at();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_types;
        break;
      }

      // repeated .chaos.Channel.Type types = 7;
      case 7: {
        if (tag == 56) {
         parse_types:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::chaos::Channel_Type_IsValid(value)) {
            add_types(static_cast< ::chaos::Channel_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 7,
                 ::chaos::Channel_Type_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_types())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_types;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chaos.Channel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chaos.Channel)
  return false;
#undef DO_
}

void Channel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chaos.Channel)
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Channel.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Channel.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string content_type = 3;
  if (has_content_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content_type().data(), this->content_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Channel.content_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->content_type(), output);
  }

  // optional uint32 max_size = 4;
  if (has_max_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->max_size(), output);
  }

  // optional uint64 created_at = 5;
  if (has_created_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->created_at(), output);
  }

  // optional uint64 updated_at = 6;
  if (has_updated_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->updated_at(), output);
  }

  // repeated .chaos.Channel.Type types = 7;
  for (int i = 0; i < this->types_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->types(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chaos.Channel)
}

::google::protobuf::uint8* Channel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:chaos.Channel)
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Channel.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Channel.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string content_type = 3;
  if (has_content_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content_type().data(), this->content_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Channel.content_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->content_type(), target);
  }

  // optional uint32 max_size = 4;
  if (has_max_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->max_size(), target);
  }

  // optional uint64 created_at = 5;
  if (has_created_at()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->created_at(), target);
  }

  // optional uint64 updated_at = 6;
  if (has_updated_at()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->updated_at(), target);
  }

  // repeated .chaos.Channel.Type types = 7;
  for (int i = 0; i < this->types_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->types(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chaos.Channel)
  return target;
}

int Channel::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:chaos.Channel)
  int total_size = 0;

  // required string id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }
  if (_has_bits_[1 / 32] & 62u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string content_type = 3;
    if (has_content_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content_type());
    }

    // optional uint32 max_size = 4;
    if (has_max_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->max_size());
    }

    // optional uint64 created_at = 5;
    if (has_created_at()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->created_at());
    }

    // optional uint64 updated_at = 6;
    if (has_updated_at()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->updated_at());
    }

  }
  // repeated .chaos.Channel.Type types = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->types_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->types(i));
    }
    total_size += 1 * this->types_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Channel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chaos.Channel)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Channel* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Channel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chaos.Channel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chaos.Channel)
    MergeFrom(*source);
  }
}

void Channel::MergeFrom(const Channel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chaos.Channel)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  types_.MergeFrom(from.types_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_content_type()) {
      set_has_content_type();
      content_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_type_);
    }
    if (from.has_max_size()) {
      set_max_size(from.max_size());
    }
    if (from.has_created_at()) {
      set_created_at(from.created_at());
    }
    if (from.has_updated_at()) {
      set_updated_at(from.updated_at());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Channel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chaos.Channel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Channel::CopyFrom(const Channel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chaos.Channel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Channel::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Channel::Swap(Channel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Channel::InternalSwap(Channel* other) {
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  content_type_.Swap(&other->content_type_);
  std::swap(max_size_, other->max_size_);
  std::swap(created_at_, other->created_at_);
  std::swap(updated_at_, other->updated_at_);
  types_.UnsafeArenaSwap(&other->types_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Channel::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Channel_descriptor_;
  metadata.reflection = Channel_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Channel

// required string id = 1;
bool Channel::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Channel::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void Channel::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void Channel::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
 const ::std::string& Channel::id() const {
  // @@protoc_insertion_point(field_get:chaos.Channel.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Channel::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chaos.Channel.id)
}
 void Channel::set_id(const char* value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chaos.Channel.id)
}
 void Channel::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chaos.Channel.id)
}
 ::std::string* Channel::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:chaos.Channel.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Channel::release_id() {
  // @@protoc_insertion_point(field_release:chaos.Channel.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Channel::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:chaos.Channel.id)
}

// optional string name = 2;
bool Channel::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Channel::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void Channel::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void Channel::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& Channel::name() const {
  // @@protoc_insertion_point(field_get:chaos.Channel.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Channel::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chaos.Channel.name)
}
 void Channel::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chaos.Channel.name)
}
 void Channel::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chaos.Channel.name)
}
 ::std::string* Channel::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:chaos.Channel.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Channel::release_name() {
  // @@protoc_insertion_point(field_release:chaos.Channel.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Channel::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:chaos.Channel.name)
}

// optional string content_type = 3;
bool Channel::has_content_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Channel::set_has_content_type() {
  _has_bits_[0] |= 0x00000004u;
}
void Channel::clear_has_content_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void Channel::clear_content_type() {
  content_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content_type();
}
 const ::std::string& Channel::content_type() const {
  // @@protoc_insertion_point(field_get:chaos.Channel.content_type)
  return content_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Channel::set_content_type(const ::std::string& value) {
  set_has_content_type();
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chaos.Channel.content_type)
}
 void Channel::set_content_type(const char* value) {
  set_has_content_type();
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chaos.Channel.content_type)
}
 void Channel::set_content_type(const char* value, size_t size) {
  set_has_content_type();
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chaos.Channel.content_type)
}
 ::std::string* Channel::mutable_content_type() {
  set_has_content_type();
  // @@protoc_insertion_point(field_mutable:chaos.Channel.content_type)
  return content_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Channel::release_content_type() {
  // @@protoc_insertion_point(field_release:chaos.Channel.content_type)
  clear_has_content_type();
  return content_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Channel::set_allocated_content_type(::std::string* content_type) {
  if (content_type != NULL) {
    set_has_content_type();
  } else {
    clear_has_content_type();
  }
  content_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content_type);
  // @@protoc_insertion_point(field_set_allocated:chaos.Channel.content_type)
}

// optional uint32 max_size = 4;
bool Channel::has_max_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Channel::set_has_max_size() {
  _has_bits_[0] |= 0x00000008u;
}
void Channel::clear_has_max_size() {
  _has_bits_[0] &= ~0x00000008u;
}
void Channel::clear_max_size() {
  max_size_ = 0u;
  clear_has_max_size();
}
 ::google::protobuf::uint32 Channel::max_size() const {
  // @@protoc_insertion_point(field_get:chaos.Channel.max_size)
  return max_size_;
}
 void Channel::set_max_size(::google::protobuf::uint32 value) {
  set_has_max_size();
  max_size_ = value;
  // @@protoc_insertion_point(field_set:chaos.Channel.max_size)
}

// optional uint64 created_at = 5;
bool Channel::has_created_at() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Channel::set_has_created_at() {
  _has_bits_[0] |= 0x00000010u;
}
void Channel::clear_has_created_at() {
  _has_bits_[0] &= ~0x00000010u;
}
void Channel::clear_created_at() {
  created_at_ = GOOGLE_ULONGLONG(0);
  clear_has_created_at();
}
 ::google::protobuf::uint64 Channel::created_at() const {
  // @@protoc_insertion_point(field_get:chaos.Channel.created_at)
  return created_at_;
}
 void Channel::set_created_at(::google::protobuf::uint64 value) {
  set_has_created_at();
  created_at_ = value;
  // @@protoc_insertion_point(field_set:chaos.Channel.created_at)
}

// optional uint64 updated_at = 6;
bool Channel::has_updated_at() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Channel::set_has_updated_at() {
  _has_bits_[0] |= 0x00000020u;
}
void Channel::clear_has_updated_at() {
  _has_bits_[0] &= ~0x00000020u;
}
void Channel::clear_updated_at() {
  updated_at_ = GOOGLE_ULONGLONG(0);
  clear_has_updated_at();
}
 ::google::protobuf::uint64 Channel::updated_at() const {
  // @@protoc_insertion_point(field_get:chaos.Channel.updated_at)
  return updated_at_;
}
 void Channel::set_updated_at(::google::protobuf::uint64 value) {
  set_has_updated_at();
  updated_at_ = value;
  // @@protoc_insertion_point(field_set:chaos.Channel.updated_at)
}

// repeated .chaos.Channel.Type types = 7;
int Channel::types_size() const {
  return types_.size();
}
void Channel::clear_types() {
  types_.Clear();
}
 ::chaos::Channel_Type Channel::types(int index) const {
  // @@protoc_insertion_point(field_get:chaos.Channel.types)
  return static_cast< ::chaos::Channel_Type >(types_.Get(index));
}
 void Channel::set_types(int index, ::chaos::Channel_Type value) {
  assert(::chaos::Channel_Type_IsValid(value));
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:chaos.Channel.types)
}
 void Channel::add_types(::chaos::Channel_Type value) {
  assert(::chaos::Channel_Type_IsValid(value));
  types_.Add(value);
  // @@protoc_insertion_point(field_add:chaos.Channel.types)
}
 const ::google::protobuf::RepeatedField<int>&
Channel::types() const {
  // @@protoc_insertion_point(field_list:chaos.Channel.types)
  return types_;
}
 ::google::protobuf::RepeatedField<int>*
Channel::mutable_types() {
  // @@protoc_insertion_point(field_mutable_list:chaos.Channel.types)
  return &types_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisruptionProperty::kKeyFieldNumber;
const int DisruptionProperty::kTypeFieldNumber;
const int DisruptionProperty::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisruptionProperty::DisruptionProperty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:chaos.DisruptionProperty)
}

void DisruptionProperty::InitAsDefaultInstance() {
}

DisruptionProperty::DisruptionProperty(const DisruptionProperty& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:chaos.DisruptionProperty)
}

void DisruptionProperty::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DisruptionProperty::~DisruptionProperty() {
  // @@protoc_insertion_point(destructor:chaos.DisruptionProperty)
  SharedDtor();
}

void DisruptionProperty::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DisruptionProperty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DisruptionProperty::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DisruptionProperty_descriptor_;
}

const DisruptionProperty& DisruptionProperty::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_chaos_2eproto();
  return *default_instance_;
}

DisruptionProperty* DisruptionProperty::default_instance_ = NULL;

DisruptionProperty* DisruptionProperty::New(::google::protobuf::Arena* arena) const {
  DisruptionProperty* n = new DisruptionProperty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DisruptionProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:chaos.DisruptionProperty)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_key()) {
      key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_type()) {
      type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_value()) {
      value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DisruptionProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chaos.DisruptionProperty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chaos.DisruptionProperty.key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_type;
        break;
      }

      // required string type = 2;
      case 2: {
        if (tag == 18) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chaos.DisruptionProperty.type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_value;
        break;
      }

      // required string value = 3;
      case 3: {
        if (tag == 26) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chaos.DisruptionProperty.value");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chaos.DisruptionProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chaos.DisruptionProperty)
  return false;
#undef DO_
}

void DisruptionProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chaos.DisruptionProperty)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.DisruptionProperty.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // required string type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.DisruptionProperty.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type(), output);
  }

  // required string value = 3;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.DisruptionProperty.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chaos.DisruptionProperty)
}

::google::protobuf::uint8* DisruptionProperty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:chaos.DisruptionProperty)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.DisruptionProperty.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // required string type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.DisruptionProperty.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  // required string value = 3;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.DisruptionProperty.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chaos.DisruptionProperty)
  return target;
}

int DisruptionProperty::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:chaos.DisruptionProperty)
  int total_size = 0;

  if (has_key()) {
    // required string key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  if (has_type()) {
    // required string type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  if (has_value()) {
    // required string value = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  return total_size;
}
int DisruptionProperty::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:chaos.DisruptionProperty)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());

    // required string type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());

    // required string value = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DisruptionProperty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chaos.DisruptionProperty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DisruptionProperty* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DisruptionProperty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chaos.DisruptionProperty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chaos.DisruptionProperty)
    MergeFrom(*source);
  }
}

void DisruptionProperty::MergeFrom(const DisruptionProperty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chaos.DisruptionProperty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (from.has_type()) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (from.has_value()) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DisruptionProperty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chaos.DisruptionProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisruptionProperty::CopyFrom(const DisruptionProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chaos.DisruptionProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisruptionProperty::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void DisruptionProperty::Swap(DisruptionProperty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisruptionProperty::InternalSwap(DisruptionProperty* other) {
  key_.Swap(&other->key_);
  type_.Swap(&other->type_);
  value_.Swap(&other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DisruptionProperty::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DisruptionProperty_descriptor_;
  metadata.reflection = DisruptionProperty_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DisruptionProperty

// required string key = 1;
bool DisruptionProperty::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DisruptionProperty::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void DisruptionProperty::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void DisruptionProperty::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
 const ::std::string& DisruptionProperty::key() const {
  // @@protoc_insertion_point(field_get:chaos.DisruptionProperty.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DisruptionProperty::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chaos.DisruptionProperty.key)
}
 void DisruptionProperty::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chaos.DisruptionProperty.key)
}
 void DisruptionProperty::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chaos.DisruptionProperty.key)
}
 ::std::string* DisruptionProperty::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:chaos.DisruptionProperty.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DisruptionProperty::release_key() {
  // @@protoc_insertion_point(field_release:chaos.DisruptionProperty.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DisruptionProperty::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:chaos.DisruptionProperty.key)
}

// required string type = 2;
bool DisruptionProperty::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DisruptionProperty::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void DisruptionProperty::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void DisruptionProperty::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
 const ::std::string& DisruptionProperty::type() const {
  // @@protoc_insertion_point(field_get:chaos.DisruptionProperty.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DisruptionProperty::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chaos.DisruptionProperty.type)
}
 void DisruptionProperty::set_type(const char* value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chaos.DisruptionProperty.type)
}
 void DisruptionProperty::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chaos.DisruptionProperty.type)
}
 ::std::string* DisruptionProperty::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:chaos.DisruptionProperty.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DisruptionProperty::release_type() {
  // @@protoc_insertion_point(field_release:chaos.DisruptionProperty.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DisruptionProperty::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:chaos.DisruptionProperty.type)
}

// required string value = 3;
bool DisruptionProperty::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DisruptionProperty::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
void DisruptionProperty::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
void DisruptionProperty::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
 const ::std::string& DisruptionProperty::value() const {
  // @@protoc_insertion_point(field_get:chaos.DisruptionProperty.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DisruptionProperty::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chaos.DisruptionProperty.value)
}
 void DisruptionProperty::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chaos.DisruptionProperty.value)
}
 void DisruptionProperty::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chaos.DisruptionProperty.value)
}
 ::std::string* DisruptionProperty::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:chaos.DisruptionProperty.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DisruptionProperty::release_value() {
  // @@protoc_insertion_point(field_release:chaos.DisruptionProperty.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DisruptionProperty::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:chaos.DisruptionProperty.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Meta::kKeyFieldNumber;
const int Meta::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Meta::Meta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:chaos.Meta)
}

void Meta::InitAsDefaultInstance() {
}

Meta::Meta(const Meta& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:chaos.Meta)
}

void Meta::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Meta::~Meta() {
  // @@protoc_insertion_point(destructor:chaos.Meta)
  SharedDtor();
}

void Meta::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Meta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Meta::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Meta_descriptor_;
}

const Meta& Meta::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_chaos_2eproto();
  return *default_instance_;
}

Meta* Meta::default_instance_ = NULL;

Meta* Meta::New(::google::protobuf::Arena* arena) const {
  Meta* n = new Meta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Meta::Clear() {
// @@protoc_insertion_point(message_clear_start:chaos.Meta)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_key()) {
      key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_value()) {
      value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Meta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chaos.Meta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chaos.Meta.key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // required string value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chaos.Meta.value");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chaos.Meta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chaos.Meta)
  return false;
#undef DO_
}

void Meta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chaos.Meta)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Meta.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // required string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Meta.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chaos.Meta)
}

::google::protobuf::uint8* Meta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:chaos.Meta)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Meta.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // required string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chaos.Meta.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chaos.Meta)
  return target;
}

int Meta::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:chaos.Meta)
  int total_size = 0;

  if (has_key()) {
    // required string key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  if (has_value()) {
    // required string value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  return total_size;
}
int Meta::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:chaos.Meta)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());

    // required string value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Meta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chaos.Meta)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Meta* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Meta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chaos.Meta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chaos.Meta)
    MergeFrom(*source);
  }
}

void Meta::MergeFrom(const Meta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chaos.Meta)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (from.has_value()) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Meta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chaos.Meta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Meta::CopyFrom(const Meta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chaos.Meta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Meta::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Meta::Swap(Meta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Meta::InternalSwap(Meta* other) {
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Meta::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Meta_descriptor_;
  metadata.reflection = Meta_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Meta

// required string key = 1;
bool Meta::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Meta::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void Meta::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void Meta::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
 const ::std::string& Meta::key() const {
  // @@protoc_insertion_point(field_get:chaos.Meta.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Meta::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chaos.Meta.key)
}
 void Meta::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chaos.Meta.key)
}
 void Meta::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chaos.Meta.key)
}
 ::std::string* Meta::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:chaos.Meta.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Meta::release_key() {
  // @@protoc_insertion_point(field_release:chaos.Meta.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Meta::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:chaos.Meta.key)
}

// required string value = 2;
bool Meta::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Meta::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void Meta::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void Meta::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
 const ::std::string& Meta::value() const {
  // @@protoc_insertion_point(field_get:chaos.Meta.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Meta::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chaos.Meta.value)
}
 void Meta::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chaos.Meta.value)
}
 void Meta::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chaos.Meta.value)
}
 ::std::string* Meta::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:chaos.Meta.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Meta::release_value() {
  // @@protoc_insertion_point(field_release:chaos.Meta.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Meta::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:chaos.Meta.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS
::google::protobuf::internal::ExtensionIdentifier< ::transit_realtime::FeedEntity,
    ::google::protobuf::internal::MessageTypeTraits< ::chaos::Disruption >, 11, false >
  disruption(kDisruptionFieldNumber, ::chaos::Disruption::default_instance());

// @@protoc_insertion_point(namespace_scope)

}  // namespace chaos

// @@protoc_insertion_point(global_scope)
